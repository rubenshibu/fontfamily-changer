{"version":3,"file":"ej2-pdf-export.umd.min.js","sources":["../src/implementation/collections/utils.js","../src/implementation/collections/dictionary.js","../src/implementation/primitives/pdf-name.js","../src/implementation/input-output/pdf-operators.js","../src/implementation/input-output/pdf-dictionary-properties.js","../src/implementation/primitives/pdf-dictionary.js","../src/implementation/primitives/pdf-number.js","../src/implementation/primitives/pdf-array.js","../src/implementation/primitives/pdf-stream.js","../src/implementation/primitives/pdf-string.js","../src/implementation/primitives/pdf-reference.js","../src/implementation/actions/action.js","../src/implementation/actions/uri-action.js","../src/implementation/graphics/enum.js","../src/implementation/graphics/pdf-color.js","../src/implementation/drawing/pdf-drawing.js","../src/implementation/graphics/brushes/pdf-brush.js","../src/implementation/graphics/brushes/pdf-solid-brush.js","../src/implementation/graphics/fonts/enum.js","../src/implementation/graphics/fonts/pdf-string-format.js","../src/implementation/graphics/fonts/string-tokenizer.js","../src/implementation/graphics/fonts/string-layouter.js","../src/implementation/graphics/fonts/pdf-font.js","../src/implementation/input-output/pdf-writer.js","../src/implementation/input-output/enum.js","../src/implementation/input-output/pdf-main-object-collection.js","../src/implementation/document/pdf-document-base.js","../src/implementation/input-output/cross-table.js","../src/implementation/document/pdf-catalog.js","../src/implementation/input-output/pdf-cross-table.js","../src/implementation/pages/pdf-page-size.js","../src/implementation/pages/enum.js","../src/implementation/graphics/pdf-margins.js","../src/implementation/pages/pdf-page-settings.js","../src/implementation/input-output/pdf-stream-writer.js","../src/implementation/graphics/pdf-pen.js","../src/implementation/graphics/pdf-transformation-matrix.js","../src/implementation/graphics/constants.js","../src/implementation/collections/object-object-pair/dictionary.js","../src/implementation/graphics/pdf-transparency.js","../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../src/implementation/graphics/figures/base/graphics-element.js","../src/implementation/document/automatic-fields/automatic-field.js","../src/implementation/document/automatic-fields/automatic-field-info.js","../src/implementation/graphics/images/byte-array.js","../src/implementation/primitives/pdf-boolean.js","../src/implementation/graphics/images/image-decoder.js","../src/implementation/graphics/unit-convertor.js","../src/implementation/graphics/images/pdf-image.js","../src/implementation/graphics/images/pdf-bitmap.js","../src/implementation/graphics/fonts/ttf-table-info.js","../src/implementation/graphics/fonts/ttf-name-table.js","../src/implementation/graphics/fonts/ttf-name-record.js","../src/implementation/graphics/fonts/ttf-head-table.js","../src/implementation/graphics/fonts/ttf-metrics.js","../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../src/implementation/graphics/fonts/ttf-OS2-Table.js","../src/implementation/graphics/fonts/ttf-post-table.js","../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-cmap-table.js","../src/implementation/graphics/fonts/ttf-glyph-info.js","../src/implementation/graphics/fonts/ttf-loca-table.js","../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-glyph-header.js","../src/implementation/input-output/big-endian-writer.js","../src/implementation/graphics/fonts/ttf-reader.js","../src/implementation/graphics/fonts/pdf-font-metrics.js","../src/implementation/graphics/fonts/unicode-true-type-font.js","../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../src/implementation/graphics/fonts/rtl-renderer.js","../src/implementation/graphics/pdf-graphics.js","../src/implementation/pages/pdf-page-layer.js","../src/implementation/general/pdf-collection.js","../src/implementation/pages/pdf-page-layer-collection.js","../src/implementation/graphics/figures/pdf-template.js","../src/implementation/graphics/pdf-resources.js","../src/implementation/pages/pdf-page-base.js","../src/implementation/annotations/annotation-collection.js","../src/implementation/pages/pdf-page.js","../src/implementation/pages/page-added-event-arguments.js","../src/implementation/pages/pdf-section-page-collection.js","../src/implementation/document/pdf-document-template.js","../src/implementation/pages/pdf-section-templates.js","../src/implementation/pages/pdf-section.js","../src/implementation/pages/pdf-section-collection.js","../src/implementation/pages/pdf-document-page-collection.js","../src/implementation/general/pdf-cache-collection.js","../src/implementation/document/pdf-document.js","../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../src/implementation/graphics/fonts/pdf-standard-font.js","../src/implementation/annotations/annotation.js","../src/implementation/annotations/link-annotation.js","../src/implementation/annotations/action-link-annotation.js","../src/implementation/annotations/document-link-annotation.js","../src/implementation/graphics/figures/base/element-layouter.js","../src/implementation/structured-elements/grid/styles/pdf-borders.js","../src/implementation/graphics/figures/layout-element.js","../src/implementation/graphics/figures/enum.js","../src/implementation/graphics/figures/base/text-layouter.js","../src/implementation/graphics/figures/text-element.js","../src/implementation/annotations/uri-annotation.js","../src/implementation/annotations/pdf-text-web-link.js","../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../src/implementation/document/automatic-fields/multiple-value-field.js","../src/implementation/document/automatic-fields/pdf-page-number-field.js","../src/implementation/document/automatic-fields/composite-field.js","../src/implementation/document/automatic-fields/single-value-field.js","../src/implementation/document/automatic-fields/page-count-field.js","../src/implementation/general/enum.js","../src/implementation/general/pdf-destination.js","../src/implementation/graphics/fonts/pdf-true-type-font.js","../src/implementation/pages/pdf-page-template-element.js","../src/implementation/structured-elements/tables/light-tables/enum.js","../src/implementation/structured-elements/grid/styles/style.js","../src/implementation/structured-elements/grid/pdf-grid-cell.js","../src/implementation/structured-elements/grid/pdf-grid-column.js","../src/implementation/structured-elements/grid/pdf-grid-row.js","../src/implementation/structured-elements/grid/pdf-grid.js","../src/implementation/structured-elements/grid/layout/grid-layouter.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isFontStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isFont\", {\n        /**\n         * Gets or sets 'is font' flag.\n         * @private\n         */\n        get: function () {\n            return this.isFontStream;\n        },\n        set: function (value) {\n            this.isFontStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage && !this.isFont) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        return this.rgbToString(stroke);\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n            default:\n                throw new Error('NotSupportedException : Unsupported colour space.');\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substring(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    this.currentPosition++;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substring(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substring(this.length, this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { Encoding } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        /* tslint:disable */\n        if (String.fromCharCode(imgData.getBuffer(i + 2)) === 'J' && String.fromCharCode(imgData.getBuffer(i + 3)) === 'F' && String.fromCharCode(imgData.getBuffer(i + 4)) === 'I' && String.fromCharCode(imgData.getBuffer(i + 5)) === 'F' && imgData.getBuffer(i + 6) === 0) {\n            var length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n            while (i + length_1 < imgData.count) {\n                i += length_1;\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length_1 = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isFont = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isFont = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isFont = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isFont = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isFont = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    }; /* tslint:enable */\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPath(temparg1, temparg2, false);\n        }\n    };\n    PdfGraphics.prototype.drawPath = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPath(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    /* tslint:disable */\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /* tslint:disable */\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            /* tslint:disable */\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent; /* tslint:enable */\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /* tslint:disable */\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && format.rightToLeft);\n        var useWordSpace = (format !== null && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    /* tslint:disable */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        /* tslint:enable */\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null) {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null) {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        /* tslint:disable */\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify)); /* tslint:enable */\n        return shouldJustify;\n    };\n    /* tslint:disable */\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    /* tslint:disable */\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    /* tslint:enable */\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format != null && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    /* tslint:disable */\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n            this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n            this.bCSInitialized = true;\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            this.colorSpace = PdfColorSpace.Rgb;\n            /* tslint:disable */\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            /* tslint:enable */\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null) {\n            this.currentBrush = brush;\n            /* tslint:disable */\n            brush.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            /* tslint:enable */\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            /* tslint:disable */\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None; /* tslint:enable */\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                /* tslint:disable */\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /* tslint:disable */\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    /* tslint:enable */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            this.transformationMatrix = matrix;\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            // let savable : IPdfPrimitive = (arg1 as IPdfWrapper).Element;\n            // if (savable != null)\n            // {\n            //     let pattern : PdfDictionary = this.Items.getValue(this.dictionaryProperties.pattern) as PdfDictionary;\n            //     // Create a new pattern dictionary.\n            //     if (pattern == null) {\n            //         pattern = new PdfDictionary();\n            //         this.Items.setValue(this.dictionaryProperties.pattern, pattern);\n            //     }\n            //     pattern.Items.setValue(name, new PdfReferenceHolder(savable));\n            // }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //5.76 and 0 are taken from ms-word default table margins.\n            this.leftPad = this.rightPad = 5.76;\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        retval += this.generateNumber(intArabic, 1000, 'M');\n        retval += this.generateNumber(intArabic, 900, 'CM');\n        retval += this.generateNumber(intArabic, 500, 'D');\n        retval += this.generateNumber(intArabic, 400, 'CD');\n        retval += this.generateNumber(intArabic, 100, 'C');\n        retval += this.generateNumber(intArabic, 90, 'XC');\n        retval += this.generateNumber(intArabic, 50, 'L');\n        retval += this.generateNumber(intArabic, 40, 'XL');\n        retval += this.generateNumber(intArabic, 10, 'X');\n        retval += this.generateNumber(intArabic, 9, 'IX');\n        retval += this.generateNumber(intArabic, 5, 'V');\n        retval += this.generateNumber(intArabic, 4, 'IV');\n        retval += this.generateNumber(intArabic, 1, 'I');\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return numberstring.toString();\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        if (bounds.x === -0) {\n            bounds.x = 0;\n        }\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = -actualBounds.x;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = -actualBounds.y;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = -actualBounds.y;\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = -actualBounds.x;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = -actualBounds.x;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = -actualBounds.x;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = -actualBounds.x;\n                y = -actualBounds.y;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = -actualBounds.y + actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = -actualBounds.x;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // public setBackgroundImage(value : PdfImage) : void {\n    //     this.gridRowBackgroundImage = value;\n    //     if (typeof this.parent !== 'undefined') {\n    //         for (let i : number = 0; i < this.parent.cells.count; i++) {\n    //             this.parent.cells.getCell(i).style.backgroundImage = value;\n    //         }\n    //     }\n    // }\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && this.gridRow.grid.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && this.gridRow.grid.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && this.gridRow.grid.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                }\n                if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && this.gridRow.grid.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = void 0;\n            if (this.objectValue.width <= innerLayoutArea.width) {\n                imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, this.objectValue.width, innerLayoutArea.height);\n            }\n            else {\n                imageBounds = innerLayoutArea;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        // if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n        //     p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n        //     p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        // }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        graphics.drawLine(pen, p1, p2);\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255)as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        this.grid.rows.getRow(rowin + j + 1).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            //if (pageHeight > pageWidth) {\n            this.currentPageBounds = this.currentPage.getClientSize();\n            //}\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            this.Grid.measureColumnsWidth(this.currentBounds);\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var height = this.Grid.rows.getRow(i).height;\n                if (!this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                    || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                    var headerX = row.style.border.left.width / 2;\n                    var headerY = row.style.border.top.width / 2;\n                    if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                        var headerBound = new RectangleF(headerX, headerY, this.currentBounds.width, this.currentBounds.height);\n                        this.currentBounds = headerBound;\n                    }\n                }\n                var headerHeight = this.currentBounds.y;\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                // if (headerHeight === this.currentBounds.y) {\n                //     drawHeader = true;\n                //     if (PdfGrid.repeatRowIndex === -1) {\n                //         PdfGrid.repeatRowIndex = this.rows.getRow.indexOf(row);\n                //     }\n                // } else {\n                drawHeader = false;\n                // }\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                    || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                    var x = row.style.border.left.width / 2;\n                    if (this.currentBounds.x === PdfBorders.default.right.width / 2) {\n                        var rowBound = new RectangleF(x, this.currentBounds.y, this.currentBounds.width, this.currentBounds.height);\n                        this.currentBounds = rowBound;\n                    }\n                }\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = true;\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }\n                         if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex))\n                             break;*/\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var secion = this.currentPage.section;\n                        var startIndex = secion.indexOf(startPage) + 1;\n                        var endIndex = secion.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = this.currentPage.graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                // if (cell.columnSpan > 1)\n                                // {\n                                //     for (; c < cell.columnSpan; c++)\n                                //         cellWidth += row.grid.columns.getColumn(c).width;\n                                // }\n                                // else\n                                cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        // if ((format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n        //     && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n        //     this.currentBounds.x = format.paginateBounds.x;\n        //     this.currentBounds.y = format.paginateBounds.y;\n        //     this.currentBounds.height = format.paginateBounds.height;\n        // }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (this.Grid.isChildGrid && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    if (this.Grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     this.drawRow(row, result, calculatedHeight);\n                        // }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            // if (!cancelSpans) {\n            //     for (let k : number = 1; k < row.cells.getCell(i).columnSpan; k++) {\n            //         row.cells.getCell(i + k).isCellMergeContinue = true;\n            //     }\n            //}\n            var size = new SizeF(this.Grid.columns.getColumn(i).width, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null) {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    if (row.grid.isChildGrid) {\n                        row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                    }\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","identity","dw","fontDescriptor","cIDSystemInfo","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isFont","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","isFontStream","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","isImage","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","initialize","status4","isSaving4","primitiveObject","pdfReference","tempObj","position","cTable","document","isSaving","getReference","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","color1","color2","color3","color4","assignRGB","filled","redColor","greenColor","g","blueColor","grayColor","gray","alpha","cyanColor","magentaColor","yellowColor","blackColor","maxColourChannelValue","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","rgbToString","ifStroking","colour","rgbStrings","toArray","Rgb","grayStringsSroke","grayStringsFill","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","wordWrapType","Word","internalLineLimit","textAlignment","verticalAlignment","direction","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substring","text2","peekLine","line","readWord","substr","peekWord","word","read","end","num","builder","peek","readToEnd","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","round","addToLineResult","NewLineBreak","curLine","curIndent","curLineWidth","getWrapType","WordOnly","textRemainder","wordWrap","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","max","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size1","rightToLeft","trim","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","PdfWriter","pdfDocument","buffer","overload","tempOverload","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","destroy","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","ObjectType","PdfCatalog","sections","tempDictionaryProperties","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","str","Free","getItem","offset","generation","isFree","addOffsetLength","addGenNumberLength","total","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","matrix","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","mode","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","byteLength","PdfBoolean","objectStatus","saving","boolToStr","ImageFormat","ImageDecoder","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","Jpeg","parseJpegImage","reset","imgData","length_1","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","space","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","clearTypeFonts","clearTypeFontCollection","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","UnicodeTrueTypeFont","base64String","nameString","isCompress","isEmbedFont","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","ArabicShapeRenderer","arabicCharTable","alef","alefHamza","alefHamzaBelow","alefMadda","lam","hamza","zeroWidthJoiner","hamzaAbove","hamzaBelow","wawHamza","yehHamza","waw","alefMaksura","yeh","farsiYeh","shadda","madda","lwa","lwawh","lwawhb","lwawm","bwhb","fathatan","superScriptalef","vowel","arabicMapTable","getCharacterShape","shape","level","str2","doShape","previous","ArabicShape","present","ligature","shapeCount","getShapeCount","Shapes","Value","append","Ligature","Type","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","indexes","indexLevels","mirroringShapeCharacters","update","doMirrorShaping","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","sIndex","eIndex","odd","even","pstart","pend","reArrange","temp","types","textOrder","rtlCharacterTypes","L","LRE","LRO","R","AL","RLE","RLO","PDF","EN","ES","ET","AN","CS","NSM","BN","B","S","WS","ON","charTypes","getCharacterCode","doVisualOrder","levels","characterCodes","setDefaultLevels","setLevels","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","startType","endType","charType","checkEuropeanDigits","checkArabicCharacters","checkEuropeanNumberSeparator","checkEuropeanNumberTerminator","l","getLength","checkOtherNeutrals","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","byte","lt","tt","rt","RtlRenderer","openBracket","closeBracket","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","PdfGraphics","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","canvasSize","pdfStreamWriter","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","requireProcedureSet","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","name_1","getName","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","drawPath","Winding","isPen","isBrush","isEvenOdd","Alternate","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","layer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","justifyLine","useWordSpace","Justify","rtlRender","blocks","rightAlign","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","initializeCoordinates","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","x1","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","pathTypesValuesMask","transparencyObject","GetResourceEventHandler","internalTextRenderingMode","internalTextScaling","pdfColorSpace","pdfGraphics","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","gr","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","PdfTemplate","writeTransformation","tempSize","templateSize","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","pdfNames","fonts","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","colours","PdfPage","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","settings","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","rh","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","forEach","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","isMerge","cacheCollection","documentPageCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","Cmyk","GrayScale","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","PdfLayoutFormat","baseFormat","break","paginateBounds","boundsSet","usePaginateBounds","layoutType","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","leftPad","rightPad","bottomPad","topPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","bEmbedFonts","default","newBound","PdfLayoutType","PdfLayoutBreakType","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","PdfTextElement","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","generateNumber","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfTrueTypeFont","createFontInternal","getUnicodeLineWidth","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","glyphIndices","resultGlyph","PdfPageTemplateElement","InitiateBounds","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","currentLocation","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","getSimpleDockBounds","getTemplateDockBounds","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","PdfGridCell","row","cellWidth","cellHeight","tempval","fontSpilt","finsh","rowSpanRemainingHeight","hasRowSpan","hasColSpan","isFinish","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","PdfGrid","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","rowSpanExists","hasRowSpanSpan","cellStyle","measureHeight","columnSpanExists","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","rowSpan","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","getStringFormat","innerLayoutArea","allowRowBreakAcrossPages","splitChildRowIndex","rowFontSplit","repeatFlag","childGrid","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","childGridResult","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","imageBounds","drawCellBorders","borderOverlapStyle","Inside","p1","p2","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","compWidth","getColumn","currentRowIndex","rowCollection","headers","totalHeight","getHeader","rowMergeComplete","calculateWidth","currentValue","cellIndex","internalWidth","tempWidth","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","rowHeight","rowWidth","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isRowHeightSet","isPageBreakRowSpanApplied","isRowMergeComplete","pdfGrid","bRowSpanExists","gridCells","rowStyle","border","gridRowBreakHeight","gridResult","bColumnSpanExists","cellIn","rowin","rowWid","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","gridSize","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","parentCellIndex","breakRow","hasColumnSpan","beginCellDraw","endCellDraw","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","currentRow","gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellcolSpan","cellrowSpan","cellmaxSpan","padding","columnCount","childGridColumnWidth","colCount_1","colCount_2","RowCount","ColCount","colWidth","childGridColWidth","childheight","flag","columnRanges","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","range","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","headerX","headerY","headerBound","drawRow","repeatRow","rowBound","originalHeight","repeatRowIndex","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","getNextPageformat","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","i_4","OnePage","i_5","recalHeight","ReCalculateHeight","secion","startIndex","endIndex","pageGraphics","location_2","totalwidth","i_6","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","currRowIndex","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","location_4","cancelSpans","tempValue","calculateHeight","gridHeight","cellstyle1","FinishedDrawingCell","rowBreakPageHeightCellIndex","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished"],"mappings":"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7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,OAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,OAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,OAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,OAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,OAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,OAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAE7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,KAAM,MAC7CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,MAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,MAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,MAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,MAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,MAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,MAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,OAC9CR,KAAK+7C,yBAAyBv7C,SAAS,MAAO,MAC9CR,KAAK+7C,yBAAyBv7C,SAAS,KAAO,OAC9CR,KAAK+7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,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC5E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTd,EAA8B4B,YAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTjD,EAA8ByC,4BAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTzC,EAA8ByD,aAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,I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"}