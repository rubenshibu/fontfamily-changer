{"version":3,"file":"ej2-excel-export.umd.min.js","sources":["../src/cell-style.js","../src/cell.js","../src/column.js","../src/row.js","../src/worksheets.js","../src/worksheet.js","../src/image.js","../src/value-formatter.js","../src/csv-helper.js","../src/blob-helper.js","../src/workbook.js"],"sourcesContent":["/**\n * CellStyle class\n * @private\n */\nvar CellStyle = /** @class */ (function () {\n    function CellStyle() {\n        this.numFmtId = 0;\n        this.backColor = 'none';\n        this.fontName = 'Calibri';\n        this.fontSize = 14;\n        this.fontColor = '#000000';\n        this.italic = false;\n        this.bold = false;\n        this.underline = false;\n        this.wrapText = false;\n        this.hAlign = 'general';\n        this.vAlign = 'bottom';\n        this.indent = 0;\n        this.rotation = 0;\n        this.numberFormat = 'GENERAL';\n        this.type = 'datetime';\n        this.borders = new Borders();\n        this.isGlobalStyle = false;\n    }\n    return CellStyle;\n}());\nexport { CellStyle };\n/**\n * Font Class\n * @private\n */\nvar Font = /** @class */ (function () {\n    function Font() {\n        this.sz = 14;\n        this.name = 'Calibri';\n        this.u = false;\n        this.b = false;\n        this.i = false;\n        this.color = 'FF000000';\n    }\n    return Font;\n}());\nexport { Font };\n/**\n * CellXfs class\n * @private\n */\nvar CellXfs = /** @class */ (function () {\n    function CellXfs() {\n    }\n    return CellXfs;\n}());\nexport { CellXfs };\n/**\n * Alignment class\n * @private\n */\nvar Alignment = /** @class */ (function () {\n    function Alignment() {\n    }\n    return Alignment;\n}());\nexport { Alignment };\n/**\n * CellStyleXfs class\n * @private\n */\nvar CellStyleXfs = /** @class */ (function () {\n    function CellStyleXfs() {\n    }\n    return CellStyleXfs;\n}());\nexport { CellStyleXfs };\n/**\n * CellStyles class\n * @private\n */\nvar CellStyles = /** @class */ (function () {\n    function CellStyles() {\n        this.name = 'Normal';\n        this.xfId = 0;\n    }\n    return CellStyles;\n}());\nexport { CellStyles };\n/**\n * NumFmt class\n * @private\n */\nvar NumFmt = /** @class */ (function () {\n    function NumFmt(id, code) {\n        this.numFmtId = id;\n        this.formatCode = code;\n    }\n    return NumFmt;\n}());\nexport { NumFmt };\n/**\n * Border class\n * @private\n */\nvar Border = /** @class */ (function () {\n    function Border(mLine, mColor) {\n        this.lineStyle = mLine;\n        this.color = mColor;\n    }\n    return Border;\n}());\nexport { Border };\n/**\n * Borders class\n * @private\n */\nvar Borders = /** @class */ (function () {\n    function Borders() {\n        this.left = new Border('none', '#FFFFFF');\n        this.right = new Border('none', '#FFFFFF');\n        this.top = new Border('none', '#FFFFFF');\n        this.bottom = new Border('none', '#FFFFFF');\n        this.all = new Border('none', '#FFFFFF');\n    }\n    return Borders;\n}());\nexport { Borders };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\nvar Cell = /** @class */ (function () {\n    function Cell() {\n    }\n    return Cell;\n}());\nexport { Cell };\n/**\n * Cells class\n * @private\n */\nvar Cells = /** @class */ (function (_super) {\n    __extends(Cells, _super);\n    function Cells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (cell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var c = _a[_i];\n                if (c.index === cell.index) {\n                    _this[count] = cell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(cell);\n            }\n        };\n        return _this;\n    }\n    return Cells;\n}(Array));\nexport { Cells };\n","/**\n * Column class\n * @private\n */\nvar Column = /** @class */ (function () {\n    function Column() {\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Row class\n * @private\n */\nvar Row = /** @class */ (function () {\n    function Row() {\n    }\n    return Row;\n}());\nexport { Row };\n/**\n * Rows class\n * @private\n */\nvar Rows = /** @class */ (function (_super) {\n    __extends(Rows, _super);\n    function Rows() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (row) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var r = _a[_i];\n                if (r.index === row.index) {\n                    _this[count] = row;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(row);\n            }\n        };\n        return _this;\n    }\n    return Rows;\n}(Array));\nexport { Rows };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheets class\n * @private\n */\nvar Worksheets = /** @class */ (function (_super) {\n    __extends(Worksheets, _super);\n    function Worksheets() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Worksheets;\n}(Array));\nexport { Worksheets };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Worksheet class\n * @private\n */\nvar Worksheet = /** @class */ (function () {\n    function Worksheet() {\n        this.isSummaryRowBelow = true;\n        this.showGridLines = true;\n    }\n    return Worksheet;\n}());\nexport { Worksheet };\n/**\n * Hyperlink class\n * @private\n */\nvar HyperLink = /** @class */ (function () {\n    function HyperLink() {\n    }\n    return HyperLink;\n}());\nexport { HyperLink };\n/**\n * Grouping class\n * @private\n */\nvar Grouping = /** @class */ (function () {\n    function Grouping() {\n    }\n    return Grouping;\n}());\nexport { Grouping };\n/**\n * FreezePane class\n * @private\n */\nvar FreezePane = /** @class */ (function () {\n    function FreezePane() {\n    }\n    return FreezePane;\n}());\nexport { FreezePane };\n/**\n * MergeCell\n * @private\n */\nvar MergeCell = /** @class */ (function () {\n    function MergeCell() {\n    }\n    return MergeCell;\n}());\nexport { MergeCell };\n/**\n * MergeCells class\n * @private\n */\nvar MergeCells = /** @class */ (function (_super) {\n    __extends(MergeCells, _super);\n    function MergeCells() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.add = function (mergeCell) {\n            var inserted = false;\n            var count = 0;\n            for (var _i = 0, _a = _this; _i < _a.length; _i++) {\n                var mCell = _a[_i];\n                if (MergeCells.isIntersecting(mCell, mergeCell)) {\n                    var intersectingCell = new MergeCell();\n                    intersectingCell.x = Math.min(mCell.x, mergeCell.x);\n                    intersectingCell.y = Math.min(mCell.Y, mergeCell.y);\n                    intersectingCell.width = Math.max(mCell.Width + mCell.X, mergeCell.width + mergeCell.x);\n                    intersectingCell.height = Math.max(mCell.Height + mCell.Y, mergeCell.height + mergeCell.y);\n                    intersectingCell.ref = (_this[count].ref.split(':')[0]) + ':' + (mergeCell.ref.split(':')[1]);\n                    _this[count] = intersectingCell;\n                    mergeCell = intersectingCell;\n                    inserted = true;\n                }\n                count++;\n            }\n            if (!inserted) {\n                _this.push(mergeCell);\n            }\n            return mergeCell;\n        };\n        return _this;\n    }\n    MergeCells.isIntersecting = function (base, compare) {\n        return (base.x <= compare.x + compare.width)\n            && (compare.x <= base.x + base.width)\n            && (base.y <= compare.y + compare.height)\n            && (compare.y <= base.y + base.height);\n    };\n    return MergeCells;\n}(Array));\nexport { MergeCells };\n","/**\n * Image class\n * @private\n */\nvar Image = /** @class */ (function () {\n    function Image() {\n    }\n    return Image;\n}());\nexport { Image };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\n// import { IValueFormatter } from '../base/interface';\n/**\n * ValueFormatter class to globalize the value.\n * @private\n */\nvar ValueFormatter = /** @class */ (function () {\n    function ValueFormatter(cultureName) {\n        this.intl = new Internationalization();\n        // if (!isNullOrUndefined(cultureName)) {\n        //     this.intl.culture = cultureName;\n        // }\n    }\n    ValueFormatter.prototype.getFormatFunction = function (format, isServerRendered) {\n        if (format.type) {\n            if (isServerRendered) {\n                format.isServerRendered = true;\n            }\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    // public getParserFunction(format: NumberFormatOptions | DateFormatOptions): Function {\n    //     if ((<DateFormatOptions>format).type) {\n    //         return this.intl.getDateParser(<DateFormatOptions>format);\n    //     } else {\n    //         return this.intl.getNumberParser(<DateFormatOptions>format);\n    //     }\n    // }\n    // public fromView(value: string, format: Function, type?: string): string | number | Date {\n    //     if (type === 'date' || type === 'datetime' || type === 'number') {\n    //         return format(value);\n    //     } else {\n    //         return value;\n    //     }\n    // }\n    ValueFormatter.prototype.toView = function (value, format) {\n        var result = value;\n        if (!isNullOrUndefined(format) && !isNullOrUndefined(value)) {\n            result = format(value);\n        }\n        return result;\n    };\n    // public setCulture(cultureName: string): void {\n    //     if (!isNullOrUndefined(cultureName)) {\n    //         setCulture(cultureName);\n    //     }\n    // }\n    /* tslint:disable:no-any */\n    ValueFormatter.prototype.displayText = function (value, format, isServerRendered) {\n        return this.toView(value, this.getFormatFunction(format, isServerRendered));\n    };\n    return ValueFormatter;\n}());\nexport { ValueFormatter };\n","import { ValueFormatter } from './value-formatter';\n/**\n * CsvHelper class\n * @private\n */\nvar CsvHelper = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function CsvHelper(json) {\n        this.csvStr = '';\n        this.formatter = new ValueFormatter();\n        this.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n        if (json.isServerRendered !== null && json.isServerRendered !== undefined) {\n            this.isServerRendered = json.isServerRendered;\n        }\n        if (json.styles !== null && json.styles !== undefined) {\n            this.globalStyles = new Map();\n            for (var i = 0; i < json.styles.length; i++) {\n                if (json.styles[i].name !== undefined && json.styles[i].numberFormat !== undefined) {\n                    this.globalStyles.set(json.styles[i].name, json.styles[i].numberFormat);\n                }\n            }\n        }\n        // Parses Worksheets data to DOM.        \n        if (json.worksheets !== null && json.worksheets !== undefined) {\n            this.parseWorksheet(json.worksheets[0]);\n        }\n        //this.csvStr = 'a1,a2,a3\\nb1,b2,b3';\n    }\n    CsvHelper.prototype.parseWorksheet = function (json) {\n        //Rows\n        if (json.rows !== null && json.rows !== undefined) {\n            this.parseRows(json.rows);\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRows = function (rows) {\n        var count = 1;\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            //Row index\n            if (row.index !== null && row.index !== undefined) {\n                while (count < row.index) {\n                    this.csvStr += '\\n';\n                    count++;\n                }\n                this.parseRow(row);\n            }\n            else {\n                throw Error('Row index is missing.');\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseRow = function (row) {\n        if (row.cells !== null && row.cells !== undefined) {\n            var count = 1;\n            for (var _i = 0, _a = row.cells; _i < _a.length; _i++) {\n                var cell = _a[_i];\n                //cell index\n                if (cell.index !== null && cell.index !== undefined) {\n                    while (count < cell.index) {\n                        this.csvStr += ',';\n                        count++;\n                    }\n                    this.parseCell(cell);\n                }\n                else {\n                    throw Error('Cell index is missing.');\n                }\n            }\n        }\n    };\n    /* tslint:disable:no-any */\n    CsvHelper.prototype.parseCell = function (cell) {\n        var csv = this.csvStr;\n        if (cell.value !== undefined) {\n            if (cell.value instanceof Date) {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: cell.style.numberFormat }, this.isServerRendered));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: cell.style.numberFormat }, this.isServerRendered));\n                    }\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    try {\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', skeleton: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                    }\n                    catch (error) {\n                        /* tslint:disable-next-line:max-line-length */\n                        csv += this.parseCellValue(this.formatter.displayText(cell.value, { type: 'dateTime', format: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                    }\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else if (typeof (cell.value) === 'boolean') {\n                csv += cell.value ? 'TRUE' : 'FALSE';\n            }\n            else if (typeof (cell.value) === 'number') {\n                if (cell.style !== undefined && cell.style.numberFormat !== undefined) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: cell.style.numberFormat }, this.isServerRendered));\n                }\n                else if (cell.style !== undefined && cell.style.name !== undefined && this.globalStyles.has(cell.style.name)) {\n                    /* tslint:disable-next-line:max-line-length */\n                    csv += this.parseCellValue(this.formatter.displayText(cell.value, { format: this.globalStyles.get(cell.style.name) }, this.isServerRendered));\n                }\n                else {\n                    csv += cell.value;\n                }\n            }\n            else {\n                csv += this.parseCellValue(cell.value);\n            }\n        }\n        this.csvStr = csv;\n    };\n    CsvHelper.prototype.parseCellValue = function (value) {\n        var val = '';\n        var length = value.length;\n        for (var start = 0; start < length; start++) {\n            if (value[start] === '\\\"') {\n                val += value[start].replace('\\\"', '\\\"\\\"');\n            }\n            else {\n                val += value[start];\n            }\n        }\n        value = val;\n        if (value.indexOf(',') !== -1 || value.indexOf('\\n') !== -1) {\n            return value = '\\\"' + value + '\\\"';\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     */\n    CsvHelper.prototype.save = function (fileName) {\n        this.buffer = new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(this.buffer, fileName);\n        }\n        else {\n            var dataUrl_1 = window.URL.createObjectURL(this.buffer);\n            var dwlLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            dwlLink.download = fileName;\n            dwlLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            dwlLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n            });\n        }\n    };\n    CsvHelper.prototype.saveAsBlob = function () {\n        return new Blob(['\\ufeff' + this.csvStr], { type: 'text/csv;charset=UTF-8' });\n    };\n    return CsvHelper;\n}());\nexport { CsvHelper };\n","/**\n * BlobHelper class\n * @private\n */\nvar BlobHelper = /** @class */ (function () {\n    function BlobHelper() {\n        /* tslint:disable:no-any */\n        this.parts = [];\n    }\n    /* tslint:disable:no-any */\n    BlobHelper.prototype.append = function (part) {\n        this.parts.push(part);\n        this.blob = undefined; // Invalidate the blob\n    };\n    BlobHelper.prototype.getBlob = function () {\n        return new Blob(this.parts, { type: 'text/plain' });\n    };\n    return BlobHelper;\n}());\nexport { BlobHelper };\n","import { Worksheets } from './worksheets';\nimport { Worksheet, FreezePane, MergeCell, MergeCells, HyperLink, Grouping } from './worksheet';\nimport { CellStyle, Font, Borders, CellXfs, Alignment, NumFmt, CellStyleXfs, CellStyles } from './cell-style';\nimport { Column } from './column';\nimport { Row, Rows } from './row';\nimport { Image } from './image';\nimport { Cell, Cells } from './cell';\nimport { ZipArchive, ZipArchiveItem } from '@syncfusion/ej2-compression';\nimport { CsvHelper } from './csv-helper';\nimport { Internationalization, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { BlobHelper } from './blob-helper';\n/**\n * Workbook class\n */\nvar Workbook = /** @class */ (function () {\n    /* tslint:disable:no-any */\n    function Workbook(json, saveType, culture, currencyString) {\n        this.sharedStringCount = 0;\n        this.unitsProportions = [\n            96 / 75.0,\n            96 / 300.0,\n            96,\n            96 / 25.4,\n            96 / 2.54,\n            1,\n            96 / 72.0,\n            96 / 72.0 / 12700,\n        ];\n        /* tslint:disable:no-any */\n        this.hyperlinkStyle = { fontColor: '#0000FF', underline: true };\n        if (culture !== undefined) {\n            this.culture = culture;\n        }\n        else {\n            this.culture = 'en-US';\n        }\n        if (currencyString !== undefined) {\n            this.currency = currencyString;\n        }\n        else {\n            this.currency = 'USD';\n        }\n        this.intl = new Internationalization(this.culture);\n        this.mSaveType = saveType;\n        if (saveType === 'xlsx') {\n            this.mArchive = new ZipArchive();\n            this.sharedString = [];\n            this.mFonts = [];\n            this.mBorders = [];\n            this.mStyles = [];\n            this.printTitles = new Map();\n            this.cellStyles = new Map();\n            this.mNumFmt = new Map();\n            this.mFills = new Map();\n            this.mStyles.push(new CellStyle());\n            this.mFonts.push(new Font());\n            /* tslint:disable */\n            this.cellStyles.set('Normal', new CellStyles());\n            /* tslint:enable */\n            this.mCellXfs = [];\n            this.mCellStyleXfs = [];\n            this.drawingCount = 0;\n            this.imageCount = 0;\n            if (json.styles !== null && json.styles !== undefined) {\n                /* tslint:disable-next-line:no-any */\n                this.globalStyles = new Map();\n                for (var i = 0; i < json.styles.length; i++) {\n                    if (json.styles[i].name !== undefined) {\n                        if (!this.cellStyles.has(json.styles[i].name)) {\n                            var cellStyle = new CellStyle();\n                            cellStyle.isGlobalStyle = true;\n                            this.parserCellStyle(json.styles[i], cellStyle, 'none');\n                            var cellStylesIn = new CellStyles();\n                            cellStylesIn.name = cellStyle.name;\n                            cellStylesIn.xfId = (cellStyle.index - 1);\n                            this.cellStyles.set(cellStylesIn.name, cellStylesIn);\n                            /* tslint:disable-next-line:no-any */\n                            var tFormat = {};\n                            if (json.styles[i].numberFormat !== undefined) {\n                                tFormat.format = json.styles[i].numberFormat;\n                            }\n                            if (json.styles[i].type !== undefined) {\n                                tFormat.type = json.styles[i].type;\n                            }\n                            else {\n                                tFormat.type = 'datetime';\n                            }\n                            if (tFormat.format !== undefined) {\n                                this.globalStyles.set(json.styles[i].name, tFormat);\n                            }\n                        }\n                        else {\n                            throw Error('Style name ' + json.styles[i].name + ' is already existed');\n                        }\n                    }\n                }\n            }\n            // Parses Worksheets data to DOM.        \n            if (json.worksheets !== null && json.worksheets !== undefined) {\n                this.parserWorksheets(json.worksheets);\n            }\n            else {\n                throw Error('Worksheet is expected.');\n            }\n            // Parses the BuiltInProperties data to DOM.        \n            if (json.builtInProperties !== null && json.builtInProperties !== undefined) {\n                this.builtInProperties = new BuiltInProperties();\n                this.parserBuiltInProperties(json.builtInProperties, this.builtInProperties);\n            }\n        }\n        else {\n            this.csvHelper = new CsvHelper(json);\n        }\n    }\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBuiltInProperties = function (jsonBuiltInProperties, builtInProperties) {\n        //Author\n        if (jsonBuiltInProperties.author !== null && jsonBuiltInProperties.author !== undefined) {\n            builtInProperties.author = jsonBuiltInProperties.author;\n        }\n        //Comments\n        if (jsonBuiltInProperties.comments !== null && jsonBuiltInProperties.comments !== undefined) {\n            builtInProperties.comments = jsonBuiltInProperties.comments;\n        }\n        //Category\n        if (jsonBuiltInProperties.category !== null && jsonBuiltInProperties.category !== undefined) {\n            builtInProperties.category = jsonBuiltInProperties.category;\n        }\n        //Company\n        if (jsonBuiltInProperties.company !== null && jsonBuiltInProperties.company !== undefined) {\n            builtInProperties.company = jsonBuiltInProperties.company;\n        }\n        //Manager\n        if (jsonBuiltInProperties.manager !== null && jsonBuiltInProperties.manager !== undefined) {\n            builtInProperties.manager = jsonBuiltInProperties.manager;\n        }\n        //Subject\n        if (jsonBuiltInProperties.subject !== null && jsonBuiltInProperties.subject !== undefined) {\n            builtInProperties.subject = jsonBuiltInProperties.subject;\n        }\n        //Title\n        if (jsonBuiltInProperties.title !== null && jsonBuiltInProperties.title !== undefined) {\n            builtInProperties.title = jsonBuiltInProperties.title;\n        }\n        //Creation date\n        if (jsonBuiltInProperties.createdDate !== null && jsonBuiltInProperties.createdDate !== undefined) {\n            builtInProperties.createdDate = jsonBuiltInProperties.createdDate;\n        }\n        //Modified date\n        if (jsonBuiltInProperties.modifiedDate !== null && jsonBuiltInProperties.modifiedDate !== undefined) {\n            builtInProperties.modifiedDate = jsonBuiltInProperties.modifiedDate;\n        }\n        //Tags\n        if (jsonBuiltInProperties.tags !== null && jsonBuiltInProperties.tags !== undefined) {\n            builtInProperties.tags = jsonBuiltInProperties.tags;\n        }\n        //Status\n        if (jsonBuiltInProperties.status !== null && jsonBuiltInProperties.status !== undefined) {\n            builtInProperties.status = jsonBuiltInProperties.status;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserWorksheets = function (json) {\n        this.worksheets = new Worksheets();\n        var length = json.length;\n        for (var i = 0; i < length; i++) {\n            var jsonSheet = json[i];\n            var sheet = new Worksheet();\n            this.mergeCells = new MergeCells();\n            this.mergedCellsStyle = new Map();\n            this.mHyperLinks = [];\n            //Name\n            if (jsonSheet.name !== null && jsonSheet.name !== undefined) {\n                sheet.name = jsonSheet.name;\n            }\n            else {\n                sheet.name = 'Sheet' + (i + 1).toString();\n            }\n            sheet.index = (i + 1);\n            //Columns\n            if (jsonSheet.columns !== null && jsonSheet.columns !== undefined) {\n                this.parserColumns(jsonSheet.columns, sheet);\n            }\n            //Rows\n            if (jsonSheet.rows !== null && jsonSheet.rows !== undefined) {\n                this.parserRows(jsonSheet.rows, sheet);\n            }\n            //showGridLines\n            if (jsonSheet.showGridLines !== null && jsonSheet.showGridLines !== undefined) {\n                sheet.showGridLines = jsonSheet.showGridLines;\n            }\n            //FreezePanes\n            if (jsonSheet.freeze !== null && jsonSheet.freeze !== undefined) {\n                this.parserFreezePanes(jsonSheet.freeze, sheet);\n            }\n            //Print Title\n            if (jsonSheet.printTitle !== null && jsonSheet.printTitle !== undefined) {\n                this.parserPrintTitle(jsonSheet.printTitle, sheet);\n            }\n            if (jsonSheet.pageSetup !== undefined) {\n                if (jsonSheet.pageSetup.isSummaryRowBelow !== undefined) {\n                    sheet.isSummaryRowBelow = jsonSheet.pageSetup.isSummaryRowBelow;\n                }\n            }\n            if (jsonSheet.images !== undefined) {\n                this.parserImages(jsonSheet.images, sheet);\n            }\n            sheet.index = (i + 1);\n            sheet.mergeCells = this.mergeCells;\n            sheet.hyperLinks = this.mHyperLinks;\n            this.worksheets.push(sheet);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.mergeOptions = function (fromJson, toJson) {\n        /* tslint:disable:no-any */\n        var result = {};\n        this.applyProperties(fromJson, result);\n        this.applyProperties(toJson, result);\n        return result;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.applyProperties = function (sourceJson, destJson) {\n        var keys = Object.keys(sourceJson);\n        for (var index = 0; index < keys.length; index++) {\n            if (keys[index] !== 'name') {\n                destJson[keys[index]] = sourceJson[keys[index]];\n            }\n        }\n    };\n    Workbook.prototype.getCellName = function (row, column) {\n        return this.getColumnName(column) + row.toString();\n    };\n    Workbook.prototype.getColumnName = function (col) {\n        col--;\n        var strColumnName = '';\n        do {\n            var iCurrentDigit = col % 26;\n            col = col / 26 - 1;\n            strColumnName = String.fromCharCode(65 + iCurrentDigit) + strColumnName;\n        } while (col >= 0);\n        return strColumnName;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserPrintTitle = function (json, sheet) {\n        var printTitleName = '';\n        var titleRowName;\n        if (json.fromRow !== null && json.fromRow !== undefined) {\n            var fromRow = json.fromRow;\n            var toRow = void 0;\n            if (json.toRow !== null && json.toRow !== undefined) {\n                toRow = json.toRow;\n            }\n            else {\n                toRow = json.fromRow;\n            }\n            titleRowName = '$' + fromRow + ':$' + toRow;\n        }\n        var titleColName;\n        if (json.fromColumn !== null && json.fromColumn !== undefined) {\n            var fromColumn = json.fromColumn;\n            var toColumn = void 0;\n            if (json.toColumn !== null && json.toColumn !== undefined) {\n                toColumn = json.toColumn;\n            }\n            else {\n                toColumn = json.fromColumn;\n            }\n            titleColName = '$' + this.getColumnName(fromColumn) + ':$' + this.getColumnName(toColumn);\n        }\n        if (titleRowName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleRowName);\n        }\n        if (titleColName !== undefined && titleRowName !== undefined) {\n            printTitleName += ',' + (sheet.name + '!' + titleColName);\n        }\n        else if (titleColName !== undefined) {\n            printTitleName += (sheet.name + '!' + titleColName);\n        }\n        if (printTitleName !== '') {\n            this.printTitles.set(sheet.index - 1, printTitleName);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserFreezePanes = function (json, sheet) {\n        sheet.freezePanes = new FreezePane();\n        if (json.row !== null && json.row !== undefined) {\n            sheet.freezePanes.row = json.row;\n        }\n        else {\n            sheet.freezePanes.row = 0;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            sheet.freezePanes.column = json.column;\n        }\n        else {\n            sheet.freezePanes.column = 0;\n        }\n        sheet.freezePanes.leftCell = this.getCellName(sheet.freezePanes.row + 1, sheet.freezePanes.column + 1);\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserColumns = function (json, sheet) {\n        var columnsLength = json.length;\n        sheet.columns = [];\n        for (var column = 0; column < columnsLength; column++) {\n            var col = new Column();\n            if (json[column].index !== null && json[column].index !== undefined) {\n                col.index = json[column].index;\n            }\n            else {\n                throw Error('Column index is missing.');\n            }\n            if (json[column].width !== null && json[column].width !== undefined) {\n                col.width = json[column].width;\n            }\n            sheet.columns.push(col);\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRows = function (json, sheet) {\n        var rowsLength = json.length;\n        sheet.rows = new Rows();\n        var rowId = 0;\n        for (var r = 0; r < rowsLength; r++) {\n            var row = this.parserRow(json[r], rowId);\n            rowId = row.index;\n            sheet.rows.add(row);\n        }\n        this.insertMergedCellsStyle(sheet);\n    };\n    Workbook.prototype.insertMergedCellsStyle = function (sheet) {\n        var _this = this;\n        if (this.mergeCells.length > 0) {\n            this.mergedCellsStyle.forEach(function (value, key) {\n                var row = sheet.rows.filter(function (item) {\n                    return item.index === value.y;\n                })[0];\n                if (!isNullOrUndefined(row)) {\n                    var cell = row.cells.filter(function (item) {\n                        return item.index === value.x;\n                    })[0];\n                    if (!isNullOrUndefined(cell)) {\n                        cell.styleIndex = value.styleIndex;\n                    }\n                    else {\n                        var cells = row.cells.filter(function (item) {\n                            return item.index <= value.x;\n                        });\n                        var insertIndex = 0;\n                        if (cells.length > 0) {\n                            insertIndex = row.cells.indexOf(cells[cells.length - 1]) + 1;\n                        }\n                        row.cells.splice(insertIndex, 0, _this.createCell(value, key));\n                    }\n                }\n                else {\n                    var rows = sheet.rows.filter(function (item) {\n                        return item.index <= value.y;\n                    });\n                    var rowToInsert = new Row();\n                    rowToInsert.index = value.y;\n                    rowToInsert.cells = new Cells();\n                    rowToInsert.cells.add(_this.createCell(value, key));\n                    var insertIndex = 0;\n                    if (rows.length > 0) {\n                        insertIndex = sheet.rows.indexOf(rows[rows.length - 1]) + 1;\n                    }\n                    sheet.rows.splice(insertIndex, 0, rowToInsert);\n                }\n            });\n        }\n    };\n    Workbook.prototype.createCell = function (value, key) {\n        var cellToInsert = new Cell();\n        cellToInsert.refName = key;\n        cellToInsert.index = value.x;\n        cellToInsert.cellStyle = new CellStyle();\n        cellToInsert.styleIndex = value.styleIndex;\n        return cellToInsert;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserRow = function (json, rowIndex) {\n        var row = new Row();\n        //Row Height\n        if (json.height !== null && json.height !== undefined) {\n            row.height = json.height;\n        }\n        //Row index\n        if (json.index !== null && json.index !== undefined) {\n            row.index = json.index;\n        }\n        else {\n            throw Error('Row index is missing.');\n        }\n        if (json.grouping !== null && json.grouping !== undefined) {\n            this.parseGrouping(json.grouping, row);\n        }\n        this.parseCells(json.cells, row);\n        return row;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseGrouping = function (json, row) {\n        row.grouping = new Grouping();\n        if (json.outlineLevel !== undefined) {\n            row.grouping.outlineLevel = json.outlineLevel;\n        }\n        if (json.isCollapsed !== undefined) {\n            row.grouping.isCollapsed = json.isCollapsed;\n        }\n        if (json.isHidden !== undefined) {\n            row.grouping.isHidden = json.isHidden;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parseCells = function (json, row) {\n        row.cells = new Cells();\n        var cellsLength = json !== undefined ? json.length : 0;\n        var spanMin = 1;\n        var spanMax = 1;\n        var curCellIndex = 0;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            /* tslint:disable:no-any */\n            var jsonCell = json[cellId];\n            var cell = new Cell();\n            //cell index\n            if (jsonCell.index !== null && jsonCell.index !== undefined) {\n                cell.index = jsonCell.index;\n            }\n            else {\n                throw Error('Cell index is missing.');\n            }\n            if (cell.index < spanMin) {\n                spanMin = cell.index;\n            }\n            else if (cell.index > spanMax) {\n                spanMax = cell.index;\n            }\n            //Update the Cell name\n            cell.refName = this.getCellName(row.index, cell.index);\n            //Row span\n            if (jsonCell.rowSpan !== null && jsonCell.rowSpan !== undefined) {\n                cell.rowSpan = jsonCell.rowSpan - 1;\n            }\n            else {\n                cell.rowSpan = 0;\n            }\n            //Column span\n            if (jsonCell.colSpan !== null && jsonCell.colSpan !== undefined) {\n                cell.colSpan = jsonCell.colSpan - 1;\n            }\n            else {\n                cell.colSpan = 0;\n            }\n            //Hyperlink\n            if (jsonCell.hyperlink !== null && jsonCell.hyperlink !== undefined) {\n                var hyperLink = new HyperLink();\n                if (jsonCell.hyperlink.target !== undefined) {\n                    hyperLink.target = jsonCell.hyperlink.target;\n                    if (jsonCell.hyperlink.displayText !== undefined) {\n                        cell.value = jsonCell.hyperlink.displayText;\n                    }\n                    else {\n                        cell.value = jsonCell.hyperlink.target;\n                    }\n                    cell.type = this.getCellValueType(cell.value);\n                    hyperLink.ref = cell.refName;\n                    hyperLink.rId = (this.mHyperLinks.length + 1);\n                    this.mHyperLinks.push(hyperLink);\n                    cell.cellStyle = new CellStyle();\n                    /* tslint:disable-next-line:max-line-length */\n                    this.parserCellStyle((jsonCell.style !== undefined ? this.mergeOptions(jsonCell.style, this.hyperlinkStyle) : this.hyperlinkStyle), cell.cellStyle, 'string');\n                    cell.styleIndex = cell.cellStyle.index;\n                }\n            }\n            // formulas\n            if (jsonCell.formula !== null && jsonCell.formula !== undefined) {\n                cell.formula = jsonCell.formula;\n                cell.type = 'formula';\n            }\n            //Cell value\n            if (jsonCell.value !== null && jsonCell.value !== undefined) {\n                if (cell.formula !== undefined) {\n                    cell.value = 0;\n                }\n                else {\n                    cell.value = jsonCell.value;\n                    cell.type = this.getCellValueType(cell.value);\n                }\n            }\n            if (jsonCell.style !== null && jsonCell.style !== undefined && cell.styleIndex === undefined) {\n                cell.cellStyle = new CellStyle();\n                if (cell.value instanceof Date) {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type, 14);\n                }\n                else {\n                    this.parserCellStyle(jsonCell.style, cell.cellStyle, cell.type);\n                }\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            else if (cell.value instanceof Date) {\n                cell.cellStyle = new CellStyle();\n                this.parserCellStyle({}, cell.cellStyle, cell.type, 14);\n                cell.styleIndex = cell.cellStyle.index;\n            }\n            this.parseCellType(cell);\n            this.mergeCells = this.processMergeCells(cell, row.index, this.mergeCells);\n            row.cells.add(cell);\n            curCellIndex = (cell.index + 1);\n        }\n        row.spans = (spanMin) + ':' + (spanMax);\n    };\n    Workbook.prototype.GetColors = function () {\n        var colors;\n        colors = new Map();\n        /* tslint:disable */\n        colors.set('WHITE', 'FFFFFFFF');\n        /* tslint:disable */\n        colors.set('SILVER', 'FFC0C0C0');\n        /* tslint:disable */\n        colors.set('GRAY', 'FF808080');\n        /* tslint:disable */\n        colors.set('BLACK', 'FF000000');\n        /* tslint:disable */\n        colors.set('RED', 'FFFF0000');\n        /* tslint:disable */\n        colors.set('MAROON', 'FF800000');\n        /* tslint:disable */\n        colors.set('YELLOW', 'FFFFFF00');\n        /* tslint:disable */\n        colors.set('OLIVE', 'FF808000');\n        /* tslint:disable */\n        colors.set('LIME', 'FF00FF00');\n        /* tslint:disable */\n        colors.set('GREEN', 'FF008000');\n        /* tslint:disable */\n        colors.set('AQUA', 'FF00FFFF');\n        /* tslint:disable */\n        colors.set('TEAL', 'FF008080');\n        /* tslint:disable */\n        colors.set('BLUE', 'FF0000FF');\n        /* tslint:disable */\n        colors.set('NAVY', 'FF000080');\n        /* tslint:disable */\n        colors.set('FUCHSIA', 'FFFF00FF');\n        /* tslint:disable */\n        colors.set('PURPLE', 'FF800080');\n        return colors;\n    };\n    Workbook.prototype.processColor = function (colorVal) {\n        if (colorVal.indexOf('#') === 0) {\n            return colorVal.replace('#', 'FF');\n        }\n        colorVal = colorVal.toUpperCase();\n        this.rgbColors = this.GetColors();\n        if (this.rgbColors.has(colorVal)) {\n            colorVal = this.rgbColors.get(colorVal);\n        }\n        else {\n            colorVal = 'FF000000';\n        }\n        return colorVal;\n    };\n    Workbook.prototype.processCellValue = function (value, cell) {\n        var cellValue = value;\n        var processedVal = '';\n        var startindex = value.indexOf('<', 0);\n        if (startindex >= 0) {\n            if (startindex !== 0) {\n                processedVal += '<r><t xml:space=\"preserve\">' + value.substring(0, startindex) + '</t></r>';\n            }\n            var endIndex = value.indexOf('>', startindex + 1);\n            while (startindex >= 0 && endIndex >= 0) {\n                endIndex = value.indexOf('>', startindex + 1);\n                if (endIndex >= 0) {\n                    var subString = value.substring(startindex + 1, endIndex);\n                    startindex = value.indexOf('<', endIndex + 1);\n                    if (startindex < 0) {\n                        startindex = cellValue.length;\n                    }\n                    var text = cellValue.substring(endIndex + 1, startindex);\n                    if (text.length !== 0) {\n                        var subSplit = subString.split(' ');\n                        if (subSplit.length > 0) {\n                            processedVal += '<r><rPr>';\n                        }\n                        if (subSplit.length > 1) {\n                            for (var _i = 0, subSplit_1 = subSplit; _i < subSplit_1.length; _i++) {\n                                var element = subSplit_1[_i];\n                                var start = element.trim().substring(0, 5);\n                                switch (start) {\n                                    case 'size=':\n                                        processedVal += '<sz val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                        break;\n                                    case 'face=':\n                                        processedVal += '<rFont val=\"' + element.substring(6, element.length - 1) + '\"/>';\n                                        break;\n                                    case 'color':\n                                        processedVal += '<color rgb=\"' + this.processColor(element.substring(7, element.length - 1)) + '\"/>';\n                                        break;\n                                    case 'href=':\n                                        var hyperLink = new HyperLink();\n                                        hyperLink.target = element.substring(6, element.length - 1).trim();\n                                        hyperLink.ref = cell.refName;\n                                        hyperLink.rId = (this.mHyperLinks.length + 1);\n                                        this.mHyperLinks.push(hyperLink);\n                                        processedVal += '<color rgb=\"FF0000FF\"/><u/><b/>';\n                                        break;\n                                }\n                            }\n                        }\n                        else if (subSplit.length === 1) {\n                            var style = subSplit[0].trim();\n                            switch (style) {\n                                case 'b':\n                                    processedVal += '<b/>';\n                                    break;\n                                case 'i':\n                                    processedVal += '<i/>';\n                                    break;\n                                case 'u':\n                                    processedVal += '<u/>';\n                                    break;\n                            }\n                        }\n                        processedVal += '</rPr><t xml:space=\"preserve\">' + text + '</t></r>';\n                    }\n                }\n            }\n            if (processedVal === '') {\n                return cellValue;\n            }\n            return processedVal;\n        }\n        else {\n            return cellValue;\n        }\n    };\n    Workbook.prototype.applyGlobalStyle = function (json, cellStyle) {\n        var index = 0;\n        if (this.cellStyles.has(json.name)) {\n            cellStyle.index = this.mStyles.filter(function (a) { return (a.name === json.name); })[0].index;\n            cellStyle.name = json.name;\n        }\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserCellStyle = function (json, cellStyle, cellType, defStyleIndex) {\n        //name\n        if (json.name !== null && json.name !== undefined) {\n            if (cellStyle.isGlobalStyle) {\n                cellStyle.name = json.name;\n            }\n            else {\n                this.applyGlobalStyle(json, cellStyle);\n                return;\n            }\n        }\n        //background color\n        if (json.backColor !== null && json.backColor !== undefined) {\n            cellStyle.backColor = json.backColor;\n        }\n        //borders\n        //leftBorder\n        cellStyle.borders = new Borders();\n        //AllBorder\n        if (json.borders !== null && json.borders !== undefined) {\n            this.parserBorder(json.borders, cellStyle.borders.all);\n        }\n        //leftborder\n        if (json.leftBorder !== null && json.leftBorder !== undefined) {\n            this.parserBorder(json.leftBorder, cellStyle.borders.left);\n        }\n        //rightBorder\n        if (json.rightBorder !== null && json.rightBorder !== undefined) {\n            this.parserBorder(json.rightBorder, cellStyle.borders.right);\n        }\n        //topBorder\n        if (json.topBorder !== null && json.topBorder !== undefined) {\n            this.parserBorder(json.topBorder, cellStyle.borders.top);\n        }\n        //bottomBorder\n        if (json.bottomBorder !== null && json.bottomBorder !== undefined) {\n            this.parserBorder(json.bottomBorder, cellStyle.borders.bottom);\n        }\n        //fontName\n        if (json.fontName !== null && json.fontName !== undefined) {\n            cellStyle.fontName = json.fontName;\n        }\n        //fontSize\n        if (json.fontSize !== null && json.fontSize !== undefined) {\n            cellStyle.fontSize = json.fontSize;\n        }\n        //fontColor\n        if (json.fontColor !== null && json.fontColor !== undefined) {\n            cellStyle.fontColor = json.fontColor;\n        }\n        //italic\n        if (json.italic !== null && json.italic !== undefined) {\n            cellStyle.italic = json.italic;\n        }\n        //bold\n        if (json.bold !== null && json.bold !== undefined) {\n            cellStyle.bold = json.bold;\n        }\n        //hAlign\n        if (json.hAlign !== null && json.hAlign !== undefined) {\n            cellStyle.hAlign = json.hAlign.toLowerCase();\n        }\n        //indent\n        if (json.indent !== null && json.indent !== undefined) {\n            cellStyle.indent = json.indent;\n            if (!(cellStyle.hAlign === 'left' || cellStyle.hAlign === 'right')) {\n                cellStyle.hAlign = 'left';\n            }\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            cellStyle.rotation = json.rotation;\n        }\n        //vAlign\n        if (json.vAlign !== null && json.vAlign !== undefined) {\n            cellStyle.vAlign = json.vAlign.toLowerCase();\n        }\n        //underline\n        if (json.underline !== null && json.underline !== undefined) {\n            cellStyle.underline = json.underline;\n        }\n        //wrapText\n        if (json.wrapText !== null && json.wrapText !== undefined) {\n            cellStyle.wrapText = json.wrapText;\n        }\n        //numberFormat\n        if (json.numberFormat !== null && json.numberFormat !== undefined) {\n            if (json.type !== null && json.type !== undefined) {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, json.type);\n            }\n            else {\n                cellStyle.numberFormat = this.getNumberFormat(json.numberFormat, cellType);\n            }\n        }\n        else if (defStyleIndex !== undefined) {\n            cellStyle.numFmtId = 14;\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        else {\n            cellStyle.numberFormat = 'GENERAL';\n        }\n        cellStyle.index = this.processCellStyle(cellStyle);\n    };\n    Workbook.prototype.switchNumberFormat = function (numberFormat, type) {\n        var format = this.getNumberFormat(numberFormat, type);\n        if (format !== numberFormat) {\n            var numFmt = this.mNumFmt.get(numberFormat);\n            if (numFmt !== undefined) {\n                numFmt.formatCode = format;\n                if (this.mNumFmt.has(format)) {\n                    for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                        var cellStyleXfs = _a[_i];\n                        if (cellStyleXfs.numFmtId === numFmt.numFmtId) {\n                            cellStyleXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                    for (var _b = 0, _c = this.mCellXfs; _b < _c.length; _b++) {\n                        var cellXfs = _c[_b];\n                        if (cellXfs.numFmtId === numFmt.numFmtId) {\n                            cellXfs.numFmtId = this.mNumFmt.get(format).numFmtId;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Workbook.prototype.getNumberFormat = function (numberFormat, type) {\n        var returnFormat;\n        switch (type) {\n            case 'number':\n                try {\n                    returnFormat = this.intl.getNumberPattern({ format: numberFormat, currency: this.currency });\n                }\n                catch (error) {\n                    returnFormat = numberFormat;\n                }\n                break;\n            case 'datetime':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'dateTime' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'dateTime' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'date':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'date' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'date' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            case 'time':\n                try {\n                    returnFormat = this.intl.getDatePattern({ skeleton: numberFormat, type: 'time' }, true);\n                }\n                catch (error) {\n                    try {\n                        returnFormat = this.intl.getDatePattern({ format: numberFormat, type: 'time' }, true);\n                    }\n                    catch (error) {\n                        returnFormat = numberFormat;\n                    }\n                }\n                break;\n            default:\n                returnFormat = numberFormat;\n                break;\n        }\n        return returnFormat;\n    };\n    /* tslint:disable:no-any */\n    Workbook.prototype.parserBorder = function (json, border) {\n        if (json.color !== null && json.color !== undefined) {\n            border.color = json.color;\n        }\n        else {\n            border.color = '#000000';\n        }\n        if (json.lineStyle !== null && json.lineStyle !== undefined) {\n            border.lineStyle = json.lineStyle;\n        }\n        else {\n            border.lineStyle = 'thin';\n        }\n    };\n    Workbook.prototype.processCellStyle = function (style) {\n        if (style.isGlobalStyle) {\n            this.processNumFormatId(style);\n            this.mStyles.push(style);\n            return this.mStyles.length;\n        }\n        else {\n            var compareResult = this.compareStyle(style);\n            if (!compareResult.result) {\n                this.processNumFormatId(style);\n                this.mStyles.push(style);\n                return this.mStyles.length;\n            }\n            else {\n                //Return the index of the already existing style.\n                return compareResult.index;\n            }\n        }\n    };\n    Workbook.prototype.processNumFormatId = function (style) {\n        if (style.numberFormat !== 'GENERAL' && !this.mNumFmt.has(style.numberFormat)) {\n            var id = this.mNumFmt.size + 164;\n            this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n        }\n    };\n    Workbook.prototype.isNewFont = function (toCompareStyle) {\n        var result = false;\n        var index = 0;\n        for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n            var font = _a[_i];\n            index++;\n            var fontColor = undefined;\n            if (toCompareStyle.fontColor !== undefined) {\n                fontColor = ('FF' + toCompareStyle.fontColor.replace('#', ''));\n            }\n            result = font.color === fontColor &&\n                font.b === toCompareStyle.bold &&\n                font.i === toCompareStyle.italic &&\n                font.u === toCompareStyle.underline &&\n                font.name === toCompareStyle.fontName &&\n                font.sz === toCompareStyle.fontSize;\n            if (result) {\n                break;\n            }\n        }\n        index = index - 1;\n        return { index: index, result: result };\n    };\n    Workbook.prototype.isNewBorder = function (toCompareStyle) {\n        var bStyle = new CellStyle();\n        if (this.isAllBorder(toCompareStyle.borders)) {\n            return (bStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                bStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle);\n        }\n        else {\n            return (bStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                bStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                bStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                bStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                bStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                bStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                bStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                bStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle);\n        }\n    };\n    Workbook.prototype.isAllBorder = function (toCompareBorder) {\n        var allBorderStyle = new CellStyle();\n        return allBorderStyle.borders.all.color !== toCompareBorder.all.color &&\n            allBorderStyle.borders.all.lineStyle !== toCompareBorder.all.lineStyle;\n    };\n    Workbook.prototype.compareStyle = function (toCompareStyle) {\n        var result = true;\n        var index = 0;\n        var globalStyleIndex = 0;\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var baseStyle = _a[_i];\n            result = baseStyle.isGlobalStyle ? false : (baseStyle.backColor === toCompareStyle.backColor &&\n                baseStyle.bold === toCompareStyle.bold &&\n                baseStyle.numFmtId === toCompareStyle.numFmtId &&\n                baseStyle.numberFormat === toCompareStyle.numberFormat &&\n                baseStyle.type === toCompareStyle.type &&\n                baseStyle.fontColor === toCompareStyle.fontColor &&\n                baseStyle.fontName === toCompareStyle.fontName &&\n                baseStyle.fontSize === toCompareStyle.fontSize &&\n                baseStyle.hAlign === toCompareStyle.hAlign &&\n                baseStyle.italic === toCompareStyle.italic &&\n                baseStyle.underline === toCompareStyle.underline &&\n                baseStyle.vAlign === toCompareStyle.vAlign &&\n                baseStyle.indent === toCompareStyle.indent &&\n                baseStyle.rotation === toCompareStyle.rotation &&\n                baseStyle.wrapText === toCompareStyle.wrapText &&\n                (baseStyle.borders.all.color === toCompareStyle.borders.all.color &&\n                    baseStyle.borders.all.lineStyle === toCompareStyle.borders.all.lineStyle) &&\n                (baseStyle.borders.left.color === toCompareStyle.borders.left.color &&\n                    baseStyle.borders.left.lineStyle === toCompareStyle.borders.left.lineStyle &&\n                    baseStyle.borders.right.color === toCompareStyle.borders.right.color &&\n                    baseStyle.borders.right.lineStyle === toCompareStyle.borders.right.lineStyle &&\n                    baseStyle.borders.top.color === toCompareStyle.borders.top.color &&\n                    baseStyle.borders.top.lineStyle === toCompareStyle.borders.top.lineStyle &&\n                    baseStyle.borders.bottom.color === toCompareStyle.borders.bottom.color &&\n                    baseStyle.borders.bottom.lineStyle === toCompareStyle.borders.bottom.lineStyle));\n            if (result) {\n                index = baseStyle.index;\n                break;\n            }\n        }\n        return { index: index, result: result };\n    };\n    Workbook.prototype.contains = function (array, item) {\n        var index = array.indexOf(item);\n        return index > -1 && index < array.length;\n    };\n    Workbook.prototype.getCellValueType = function (value) {\n        if (value instanceof Date) {\n            return 'datetime';\n        }\n        else if (typeof (value) === 'boolean') {\n            return 'boolean';\n        }\n        else if (typeof (value) === 'number') {\n            return 'number';\n        }\n        else {\n            return 'string';\n        }\n    };\n    Workbook.prototype.parseCellType = function (cell) {\n        var type = cell.type;\n        var saveType;\n        var value = cell.value;\n        switch (type) {\n            case 'datetime':\n                value = this.toOADate(value);\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        var value_1 = this.globalStyles.get(cell.cellStyle.name);\n                        this.switchNumberFormat(value_1.format, value_1.type);\n                    }\n                }\n                saveType = 'n';\n                break;\n            //TODO: Update the number format index and style\n            case 'boolean':\n                value = value ? 1 : 0;\n                saveType = 'b';\n                break;\n            case 'number':\n                saveType = 'n';\n                if (cell.cellStyle !== undefined && cell.cellStyle.name !== undefined) {\n                    if (this.globalStyles.has(cell.cellStyle.name)) {\n                        this.switchNumberFormat(this.globalStyles.get(cell.cellStyle.name).format, 'number');\n                    }\n                }\n                break;\n            case 'string':\n                this.sharedStringCount++;\n                saveType = 's';\n                var sstvalue = this.processCellValue(value, cell);\n                if (!this.contains(this.sharedString, sstvalue)) {\n                    this.sharedString.push(sstvalue);\n                }\n                value = this.sharedString.indexOf(sstvalue);\n                break;\n            default:\n                break;\n        }\n        cell.saveType = saveType;\n        cell.value = value;\n    };\n    Workbook.prototype.parserImages = function (json, sheet) {\n        var imagesLength = json.length;\n        sheet.images = [];\n        var imageId = 0;\n        for (var p = 0; p < imagesLength; p++) {\n            var image = this.parserImage(json[p]);\n            sheet.images.push(image);\n        }\n    };\n    Workbook.prototype.parserImage = function (json) {\n        var image = new Image();\n        if (json.image !== null && json.image !== undefined) {\n            image.image = json.image;\n        }\n        if (json.row !== null && json.row !== undefined) {\n            image.row = json.row;\n        }\n        if (json.column !== null && json.column !== undefined) {\n            image.column = json.column;\n        }\n        if (json.lastRow !== null && json.lastRow !== undefined) {\n            image.lastRow = json.lastRow;\n        }\n        if (json.lastColumn !== null && json.lastColumn !== undefined) {\n            image.lastColumn = json.lastColumn;\n        }\n        if (json.width !== null && json.width !== undefined) {\n            image.width = json.width;\n        }\n        if (json.height !== null && json.height !== undefined) {\n            image.height = json.height;\n        }\n        if (json.horizontalFlip !== null && json.horizontalFlip !== undefined) {\n            image.horizontalFlip = json.horizontalFlip;\n        }\n        if (json.verticalFlip !== null && json.verticalFlip !== undefined) {\n            image.verticalFlip = json.verticalFlip;\n        }\n        if (json.rotation !== null && json.rotation !== undefined) {\n            image.rotation = json.rotation;\n        }\n        return image;\n    };\n    Workbook.prototype.saveAsBlob = function (blobSaveType) {\n        var _this = this;\n        switch (blobSaveType) {\n            case 'text/csv':\n                return new Promise(function (resolve, reject) {\n                    var obj = {};\n                    obj.blobData = _this.csvHelper.saveAsBlob();\n                    resolve(obj);\n                });\n            default:\n                return new Promise(function (resolve, reject) {\n                    _this.saveInternal();\n                    _this.mArchive.saveAsBlob().then(function (blob) {\n                        var obj = {};\n                        obj.blobData = new Blob([blob], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n                        resolve(obj);\n                    });\n                });\n        }\n    };\n    Workbook.prototype.save = function (fileName, proxyUrl) {\n        var _this = this;\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('Argument Null Exception: fileName cannot be null or empty');\n        }\n        var xlsxMatch = fileName.match('.xlsx$');\n        var csvMatch = fileName.match('.csv$');\n        if (xlsxMatch !== null && xlsxMatch[0] === ('.' + this.mSaveType)) {\n            this.saveInternal();\n            this.mArchive.save(fileName).then(function () {\n                _this.mArchive.destroy();\n            });\n        }\n        else if (csvMatch !== null && csvMatch[0] === ('.' + this.mSaveType)) {\n            this.csvHelper.save(fileName);\n        }\n        else {\n            throw Error('Save type and file extension is different.');\n        }\n    };\n    Workbook.prototype.saveInternal = function () {\n        this.saveWorkbook();\n        this.saveWorksheets();\n        this.saveSharedString();\n        this.saveStyles();\n        this.saveApp(this.builtInProperties);\n        this.saveCore(this.builtInProperties);\n        this.saveContentType();\n        this.saveTopLevelRelation();\n        this.saveWorkbookRelation();\n    };\n    Workbook.prototype.saveWorkbook = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var workbookTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><workbook xmlns:r = \"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns= \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"><workbookPr codeName=\"ThisWorkbook\" defaultThemeVersion= \"153222\"/><bookViews><workbookView activeTab=\"0\"/></bookViews>';\n        var sheets = '<sheets>';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheets += '<sheet name=\"' + this.worksheets[i].name + '\" sheetId=\"' + (i + 1).toString() + '\" r:id =\"rId' + (i + 1).toString() + '\" />';\n        }\n        sheets += '</sheets>';\n        workbookTemp += sheets;\n        if (this.printTitles.size > 0) {\n            var printTitle_1 = '<definedNames>';\n            this.printTitles.forEach(function (value, key) {\n                printTitle_1 += '<definedName name=\"_xlnm.Print_Titles\" localSheetId=\"' + key + '\">' + value + '</definedName>';\n            });\n            printTitle_1 += '</definedNames>';\n            workbookTemp += printTitle_1;\n        }\n        this.addToArchive(workbookTemp + '</workbook>', 'xl/workbook.xml');\n    };\n    Workbook.prototype.saveWorksheets = function () {\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            this.saveWorksheet(this.worksheets[i], i);\n        }\n    };\n    Workbook.prototype.saveWorksheet = function (sheet, index) {\n        var sheetBlob = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><worksheet xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        if (!sheet.isSummaryRowBelow) {\n            sheetString += ('<sheetPr>' + '<outlinePr ' + 'summaryBelow=\"0\" >' + '</outlinePr>' + '</sheetPr>');\n        }\n        else {\n            sheetString += ('<sheetPr />');\n        }\n        sheetString += this.saveSheetView(sheet);\n        if (sheet.columns !== undefined) {\n            var colString = '<cols>';\n            for (var _i = 0, _a = sheet.columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                if (column.width !== undefined) {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + this.pixelsToColumnWidth(column.width) + '\" customWidth=\"1\" />';\n                }\n                else {\n                    colString += '<col min=\"' + (column.index) + '\" max=\"' + (column.index) + '\" width=\"' + '8.43' + '\" customWidth=\"1\" />';\n                }\n            }\n            sheetString += (colString + '</cols>');\n        }\n        sheetString += ('<sheetData>');\n        sheetBlob.append(sheetString);\n        sheetString = '';\n        if (sheet.rows !== undefined) {\n            for (var _b = 0, _c = sheet.rows; _b < _c.length; _b++) {\n                var row = _c[_b];\n                var rowString = '<row r=\"' + (row.index) + '\" ';\n                if (!isNullOrUndefined(row.spans)) {\n                    rowString += 'spans=\"' + row.spans + '\" ';\n                }\n                if (row.height !== undefined) {\n                    rowString += ('ht=\"' + this.pixelsToRowHeight(row.height) + '\" customHeight=\"1\" ');\n                }\n                if (row.grouping !== undefined) {\n                    if (row.grouping.isHidden) {\n                        rowString += ('hidden=\"1\" ');\n                    }\n                    if (row.grouping.outlineLevel !== undefined) {\n                        rowString += ('outlineLevel=\"' + row.grouping.outlineLevel + '\" ');\n                    }\n                    if (row.grouping.isCollapsed) {\n                        rowString += ('collapsed=\"1\" ');\n                    }\n                }\n                rowString += ('>');\n                for (var _d = 0, _e = row.cells; _d < _e.length; _d++) {\n                    var cell = _e[_d];\n                    if (cell !== undefined && (cell.value !== undefined || cell.cellStyle !== undefined)) {\n                        rowString += ('<c r=\"' + cell.refName + '\" ');\n                        if (cell.saveType !== undefined) {\n                            rowString += ('t=\"' + cell.saveType + '\" ');\n                        }\n                        if (cell.styleIndex !== undefined) {\n                            rowString += ('s=\"' + cell.styleIndex + '\" ');\n                        }\n                        rowString += (' >');\n                        if (cell.formula !== undefined) {\n                            rowString += ('<f>' + cell.formula + '</f>');\n                        }\n                        if (cell.value !== undefined) {\n                            rowString += ('<v>' + cell.value + '</v></c>');\n                        }\n                        else {\n                            rowString += ('</c>');\n                        }\n                    }\n                }\n                rowString += ('</row>');\n                sheetBlob.append(rowString);\n            }\n        }\n        sheetString += ('</sheetData>');\n        if (sheet.mergeCells.length > 0) {\n            sheetString += ('<mergeCells count=\"' + sheet.mergeCells.length + '\">');\n            for (var _f = 0, _g = sheet.mergeCells; _f < _g.length; _f++) {\n                var mCell = _g[_f];\n                sheetString += ('<mergeCell ref=\"' + mCell.ref + '\" />');\n            }\n            sheetString += ('</mergeCells>');\n        }\n        if (sheet.hyperLinks.length > 0) {\n            sheetString += ('<hyperlinks>');\n            for (var _h = 0, _j = sheet.hyperLinks; _h < _j.length; _h++) {\n                var hLink = _j[_h];\n                sheetString += ('<hyperlink ref=\"' + hLink.ref + '\" r:id=\"rId' + hLink.rId + '\" />');\n            }\n            sheetString += ('</hyperlinks>');\n        }\n        /* tslint:disable-next-line:max-line-length */\n        sheetString += ('<pageMargins left=\"0.75\" right=\"0.75\" top=\"1\" bottom=\"1\" header=\"0.5\" footer=\"0.5\" /><headerFooter scaleWithDoc=\"1\" alignWithMargins=\"0\" differentFirst=\"0\" differentOddEven=\"0\" />');\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            this.drawingCount++;\n            this.saveDrawings(sheet, sheet.index);\n            sheetString += '<drawing r:id=\"rId' + (sheet.hyperLinks.length + 1) + '\"/>';\n        }\n        this.addToArchive(this.saveSheetRelations(sheet), ('xl/worksheets/_rels/sheet' + sheet.index + '.xml.rels'));\n        sheetBlob.append(sheetString + '</worksheet>');\n        this.addToArchive(sheetBlob.getBlob(), 'xl/worksheets' + '/sheet' + (index + 1) + '.xml');\n    };\n    Workbook.prototype.saveDrawings = function (sheet, index) {\n        var drawings = new BlobHelper();\n        /* tslint:disable-next-line:max-line-length */\n        var sheetDrawingString = '<xdr:wsDr xmlns:xdr=\"http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing\" xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">';\n        if (sheet.images !== undefined) {\n            var imgId = 0;\n            for (var _i = 0, _a = sheet.images; _i < _a.length; _i++) {\n                var pic = _a[_i];\n                if (pic.height !== undefined && pic.width !== undefined) {\n                    this.updatelastRowOffset(sheet, pic);\n                    this.updatelastColumnOffSet(sheet, pic);\n                }\n                else if (pic.lastRow !== undefined && pic.lastColumn !== undefined) {\n                    pic.lastRowOffset = 0;\n                    pic.lastColOffset = 0;\n                }\n                imgId++;\n                sheetDrawingString += '<xdr:twoCellAnchor editAs=\"oneCell\">';\n                sheetDrawingString += '<xdr:from><xdr:col>';\n                //col\n                sheetDrawingString += pic.column - 1;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.row - 1;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += 0;\n                sheetDrawingString += '</xdr:rowOff></xdr:from>';\n                sheetDrawingString += '<xdr:to><xdr:col>';\n                //col\n                sheetDrawingString += pic.lastColumn;\n                sheetDrawingString += '</xdr:col><xdr:colOff>';\n                //colOff\n                sheetDrawingString += pic.lastColOffset;\n                sheetDrawingString += '</xdr:colOff><xdr:row>';\n                //row\n                sheetDrawingString += pic.lastRow;\n                sheetDrawingString += '</xdr:row><xdr:rowOff>';\n                //rowOff\n                sheetDrawingString += pic.lastRowOffset;\n                sheetDrawingString += '</xdr:rowOff></xdr:to>';\n                sheetDrawingString += '<xdr:pic>';\n                sheetDrawingString += '<xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:cNvPr id=\"' + imgId + '\" name=\"Picture ' + imgId + '\"> </xdr:cNvPr>';\n                sheetDrawingString += '<xdr:cNvPicPr><a:picLocks noChangeAspect=\"1\"/></xdr:cNvPicPr> </xdr:nvPicPr>';\n                sheetDrawingString += '<xdr:blipFill>';\n                /* tslint:disable-next-line:max-line-length */\n                sheetDrawingString += '<a:blip xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\" r:embed=\"rId' + imgId + '\" cstate=\"print\">';\n                sheetDrawingString += '</a:blip><a:stretch><a:fillRect /></a:stretch></xdr:blipFill>';\n                sheetDrawingString += '<xdr:spPr>';\n                sheetDrawingString += '<a:xfrm';\n                if (pic.rotation != undefined && pic.rotation <= 3600 && pic.rotation >= -3600) {\n                    sheetDrawingString += ' rot=\"' + (pic.rotation * 60000) + '\"';\n                }\n                if (pic.verticalFlip != undefined && pic.verticalFlip != false) {\n                    sheetDrawingString += ' flipV=\"1\"';\n                }\n                if (pic.horizontalFlip != undefined && pic.horizontalFlip != false) {\n                    sheetDrawingString += ' flipH=\"1\"';\n                }\n                sheetDrawingString += '/>';\n                sheetDrawingString += '<a:prstGeom prst=\"rect\"><a:avLst /></a:prstGeom></xdr:spPr>';\n                sheetDrawingString += '</xdr:pic><xdr:clientData /></xdr:twoCellAnchor>';\n                var imageFile = new BlobHelper();\n                var imageData = this.convertBase64toImage(pic.image);\n                this.imageCount += 1;\n                this.addToArchive(imageData, 'xl/media/image' + this.imageCount + '.png');\n            }\n            drawings.append(sheetDrawingString);\n            drawings.append('</xdr:wsDr>');\n            this.saveDrawingRelations(sheet);\n            this.addToArchive(drawings.getBlob(), 'xl/drawings/drawing' + this.drawingCount + '.xml');\n        }\n    };\n    Workbook.prototype.updatelastRowOffset = function (sheet, picture) {\n        var iCurHeight = picture.height;\n        var iCurRow = picture.row;\n        var iCurOffset = 0;\n        while (iCurHeight >= 0) {\n            var iRowHeight = 0;\n            if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                iRowHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n            else\n                iRowHeight = this.convertToPixels(15);\n            var iSpaceInCell = iRowHeight - (iCurOffset * iRowHeight / 256);\n            if (iSpaceInCell > iCurHeight) {\n                picture.lastRow = iCurRow;\n                picture.lastRowOffset = iCurOffset + (iCurHeight * 256 / iRowHeight);\n                var rowHiddenHeight = 0;\n                if (sheet.rows !== undefined && sheet.rows[iCurRow - 1] !== undefined)\n                    rowHiddenHeight = this.convertToPixels(sheet.rows[iCurRow - 1].height === undefined ? 15 : sheet.rows[iCurRow - 1].height);\n                else\n                    rowHiddenHeight = this.convertToPixels(15);\n                picture.lastRowOffset = (rowHiddenHeight * picture.lastRowOffset) / 256;\n                picture.lastRowOffset = Math.round(picture.lastRowOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurHeight -= iSpaceInCell;\n                iCurRow++;\n                iCurOffset = 0;\n            }\n        }\n    };\n    Workbook.prototype.updatelastColumnOffSet = function (sheet, picture) {\n        var iCurWidth = picture.width;\n        var iCurCol = picture.column;\n        var iCurOffset = 0;\n        while (iCurWidth >= 0) {\n            var iColWidth = 0;\n            if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                iColWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol - 1].width);\n            else\n                iColWidth = this.ColumnWidthToPixels(8.43);\n            var iSpaceInCell = iColWidth - (iCurOffset * iColWidth / 1024);\n            if (iSpaceInCell > iCurWidth) {\n                picture.lastColumn = iCurCol;\n                picture.lastColOffset = iCurOffset + (iCurWidth * 1024 / iColWidth);\n                var colHiddenWidth = 0;\n                if (sheet.columns !== undefined && sheet.columns[iCurCol - 1] !== undefined)\n                    colHiddenWidth = this.ColumnWidthToPixels(sheet.columns[iCurCol - 1].width === undefined ? 8.43 : sheet.columns[iCurCol].width);\n                else\n                    colHiddenWidth = this.ColumnWidthToPixels(8.43);\n                picture.lastColOffset = (colHiddenWidth * picture.lastColOffset) / 1024;\n                picture.lastColOffset = Math.round(picture.lastColOffset / this.unitsProportions[7]);\n                break;\n            }\n            else {\n                iCurWidth -= iSpaceInCell;\n                iCurCol++;\n                iCurOffset = 0;\n            }\n        }\n    };\n    Workbook.prototype.convertToPixels = function (value) {\n        return value * this.unitsProportions[6];\n    };\n    Workbook.prototype.convertBase64toImage = function (img) {\n        var byteStr = window.atob(img);\n        var buffer = new ArrayBuffer(byteStr.length);\n        var data = new Uint8Array(buffer);\n        for (var i = 0; i < byteStr.length; i++) {\n            data[i] = byteStr.charCodeAt(i);\n        }\n        var blob = new Blob([data], { type: 'image/png' });\n        return blob;\n    };\n    Workbook.prototype.saveDrawingRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var drawingRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = sheet.images.length;\n        var id = this.imageCount - sheet.images.length;\n        for (var i = 1; i <= length; i++) {\n            id++;\n            /* tslint:disable-next-line:max-line-length */\n            drawingRelation += '<Relationship Id=\"rId' + i + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\" Target=\"../media/image' + id + '.png\" />';\n        }\n        this.addToArchive((drawingRelation + '</Relationships>'), 'xl/drawings/_rels/drawing' + this.drawingCount + '.xml.rels');\n    };\n    Workbook.prototype.pixelsToColumnWidth = function (pixels) {\n        var dDigitWidth = 7;\n        var val = (pixels > dDigitWidth + 5) ?\n            this.trunc((pixels - 5) / dDigitWidth * 100 + 0.5) / 100 :\n            pixels / (dDigitWidth + 5);\n        return (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n    };\n    Workbook.prototype.ColumnWidthToPixels = function (val) {\n        var dDigitWidth = 7;\n        var fileWidth = (val > 1) ?\n            ((val * dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0 :\n            (val * (dDigitWidth + 5) / dDigitWidth * 256.0) / 256.0;\n        return this.trunc(((256 * fileWidth + this.trunc(128 / dDigitWidth)) / 256) * dDigitWidth);\n    };\n    Workbook.prototype.trunc = function (x) {\n        var n = x - x % 1;\n        return n === 0 && (x < 0 || (x === 0 && (1 / x !== 1 / 0))) ? -0 : n;\n    };\n    Workbook.prototype.pixelsToRowHeight = function (pixels) {\n        return (pixels * this.unitsProportions[5] / this.unitsProportions[6]);\n    };\n    Workbook.prototype.saveSheetRelations = function (sheet) {\n        /* tslint:disable-next-line:max-line-length */\n        var relStr = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        for (var _i = 0, _a = sheet.hyperLinks; _i < _a.length; _i++) {\n            var hLink = _a[_i];\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + hLink.rId + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"' + hLink.target + '\" TargetMode=\"External\" />';\n        }\n        if (sheet.images != undefined && sheet.images.length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            relStr += '<Relationship Id=\"rId' + (sheet.hyperLinks.length + 1) + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/drawing\" Target=\"../drawings/drawing' + this.drawingCount + '.xml\" />';\n        }\n        relStr += '</Relationships>';\n        return relStr;\n    };\n    Workbook.prototype.saveSheetView = function (sheet) {\n        var paneString = '<sheetViews><sheetView workbookViewId=\"0\" ';\n        if (sheet.showGridLines === false) {\n            paneString += 'showGridLines=\"0\" >';\n        }\n        else {\n            paneString += '>';\n        }\n        if (sheet.freezePanes !== undefined) {\n            paneString += '<pane state=\"frozen\"' +\n                ' topLeftCell=\"' + sheet.freezePanes.leftCell + '\" ';\n            if (sheet.freezePanes.row !== 0) {\n                paneString += 'ySplit=\"' + sheet.freezePanes.row + '\" ';\n            }\n            if (sheet.freezePanes.column !== 0) {\n                paneString += 'xSplit=\"' + sheet.freezePanes.column + '\" ';\n            }\n            paneString += '/>';\n        }\n        paneString += '</sheetView></sheetViews > ';\n        return paneString;\n    };\n    Workbook.prototype.saveSharedString = function () {\n        var length = this.sharedString.length;\n        if (length > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            var sstStart = '<?xml version=\"1.0\" encoding=\"utf-8\"?><sst uniqueCount=\"' + length + '\" count=\"' + this.sharedStringCount + '\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n            var si = '';\n            for (var i = 0; i < length; i++) {\n                if (this.sharedString[i].indexOf('<r>') !== 0) {\n                    si += '<si><t>';\n                    si += this.processString(this.sharedString[i]);\n                    si += '</t></si>';\n                }\n                else {\n                    si += '<si>';\n                    si += this.sharedString[i];\n                    si += '</si>';\n                }\n            }\n            si += '</sst>';\n            this.addToArchive(sstStart + si, 'xl/sharedStrings.xml');\n        }\n    };\n    Workbook.prototype.processString = function (value) {\n        if (value.indexOf('&') !== -1) {\n            value = value.replace(/&/g, '&amp;');\n        }\n        if (value.indexOf('<') !== -1) {\n            value = value.replace(/</g, '&lt;');\n        }\n        if (value.indexOf('>') !== -1) {\n            value = value.replace(/>/g, '&gt;');\n        }\n        return value;\n    };\n    Workbook.prototype.saveStyles = function () {\n        this.updateCellXfsStyleXfs();\n        /* tslint:disable-next-line:max-line-length */\n        var styleTemp = '<?xml version=\"1.0\" encoding=\"utf-8\"?><styleSheet xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" mc:Ignorable=\"x14ac\" xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\" xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n        styleTemp += this.saveNumberFormats();\n        styleTemp += this.saveFonts();\n        styleTemp += this.saveFills();\n        styleTemp += this.saveBorders();\n        styleTemp += this.saveCellStyleXfs();\n        styleTemp += this.saveCellXfs();\n        styleTemp += this.saveCellStyles();\n        this.addToArchive(styleTemp + '</styleSheet>', 'xl/styles.xml');\n    };\n    Workbook.prototype.updateCellXfsStyleXfs = function () {\n        for (var _i = 0, _a = this.mStyles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            var cellXfs = undefined;\n            if (style.isGlobalStyle) {\n                cellXfs = new CellStyleXfs();\n                cellXfs.xfId = (style.index - 1);\n            }\n            else {\n                cellXfs = new CellXfs();\n                cellXfs.xfId = 0;\n            }\n            //Add font\n            var compareFontResult = this.isNewFont(style);\n            if (!compareFontResult.result) {\n                var font = new Font();\n                font.b = style.bold;\n                font.i = style.italic;\n                font.name = style.fontName;\n                font.sz = style.fontSize;\n                font.u = style.underline;\n                font.color = ('FF' + style.fontColor.replace('#', ''));\n                this.mFonts.push(font);\n                cellXfs.fontId = this.mFonts.length - 1;\n            }\n            else {\n                cellXfs.fontId = compareFontResult.index;\n            }\n            //Add fill\n            if (style.backColor !== 'none') {\n                var backColor = 'FF' + style.backColor.replace('#', '');\n                if (this.mFills.has(backColor)) {\n                    var fillId = this.mFills.get(backColor);\n                    cellXfs.fillId = fillId;\n                }\n                else {\n                    var fillId = this.mFills.size + 2;\n                    this.mFills.set(backColor, fillId);\n                    cellXfs.fillId = (fillId);\n                }\n            }\n            else {\n                cellXfs.fillId = 0;\n            }\n            //Add border            \n            if (!this.isNewBorder(style)) {\n                this.mBorders.push(style.borders);\n                cellXfs.borderId = this.mBorders.length;\n            }\n            else {\n                cellXfs.borderId = 0;\n            }\n            //Add Number Format            \n            if (style.numberFormat !== 'GENERAL') {\n                if (this.mNumFmt.has(style.numberFormat)) {\n                    var numFmt = this.mNumFmt.get(style.numberFormat);\n                    cellXfs.numFmtId = numFmt.numFmtId;\n                }\n                else {\n                    var id = this.mNumFmt.size + 164;\n                    this.mNumFmt.set(style.numberFormat, new NumFmt(id, style.numberFormat));\n                    cellXfs.numFmtId = id;\n                }\n            }\n            else {\n                if (style.numberFormat === 'GENERAL' && style.numFmtId === 14) {\n                    cellXfs.numFmtId = 14;\n                }\n                else {\n                    cellXfs.numFmtId = 0;\n                }\n            }\n            //Add alignment            \n            if (!style.isGlobalStyle) {\n                cellXfs.applyAlignment = 1;\n            }\n            cellXfs.alignment = new Alignment();\n            cellXfs.alignment.indent = style.indent;\n            cellXfs.alignment.horizontal = style.hAlign;\n            cellXfs.alignment.vertical = style.vAlign;\n            cellXfs.alignment.wrapText = style.wrapText ? 1 : 0;\n            cellXfs.alignment.rotation = style.rotation;\n            if (style.isGlobalStyle) {\n                this.mCellStyleXfs.push(cellXfs);\n                this.mCellXfs.push(cellXfs);\n            }\n            else {\n                //Add cellxfs\n                this.mCellXfs.push(cellXfs);\n            }\n        }\n    };\n    Workbook.prototype.saveNumberFormats = function () {\n        if (this.mNumFmt.size >= 1) {\n            var numFmtStyle_1 = '<numFmts count=\"' + (this.mNumFmt.size) + '\">';\n            this.mNumFmt.forEach(function (value, key) {\n                numFmtStyle_1 += '<numFmt numFmtId=\"' + value.numFmtId + '\" formatCode=\"' + value.formatCode.replace(/\"/g, '&quot;') + '\" />';\n            });\n            return (numFmtStyle_1 += '</numFmts>');\n        }\n        else {\n            return '';\n        }\n    };\n    Workbook.prototype.saveFonts = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fontStyle = '<fonts count=\"' + (this.mFonts.length) + '\">';\n        if (this.mFonts.length >= 1) {\n            for (var _i = 0, _a = this.mFonts; _i < _a.length; _i++) {\n                var font = _a[_i];\n                fontStyle += '<font>';\n                if (font.b) {\n                    fontStyle += '<b />';\n                }\n                if (font.i) {\n                    fontStyle += '<i />';\n                }\n                if (font.u) {\n                    fontStyle += '<u />';\n                }\n                fontStyle += '<sz val=\"' + this.pixelsToRowHeight(font.sz) + '\" />';\n                fontStyle += '<color rgb=\"' + font.color + '\" />';\n                fontStyle += '<name val=\"' + font.name + '\" /></font>';\n            }\n        }\n        return fontStyle + '</fonts>';\n    };\n    Workbook.prototype.saveFills = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var fillsStyle = '<fills count=\"' + (this.mFills.size + 2) + '\"><fill><patternFill patternType=\"none\"></patternFill></fill><fill><patternFill patternType=\"gray125\"></patternFill></fill>';\n        if (this.mFills.size >= 1) {\n            this.mFills.forEach(function (value, key) {\n                /* tslint:disable-next-line:max-line-length */\n                fillsStyle += '<fill><patternFill patternType=\"solid\"><fgColor rgb=\"' + key + '\" /><bgColor rgb=\"FFFFFFFF\" /></patternFill></fill>';\n            });\n        }\n        return fillsStyle + '</fills>';\n    };\n    Workbook.prototype.saveBorders = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var bordersStyle = '<borders count=\"' + (this.mBorders.length + 1) + '\"><border><left /><right /><top /><bottom /><diagonal /></border>';\n        if (this.mBorders.length >= 1) {\n            for (var _i = 0, _a = this.mBorders; _i < _a.length; _i++) {\n                var borders = _a[_i];\n                if (this.isAllBorder(borders)) {\n                    var color = borders.all.color.replace('#', '');\n                    var lineStyle = borders.all.lineStyle;\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></left><right style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></right><top style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></top><bottom style=\"' + lineStyle + '\"><color rgb=\"FF' + color + '\" /></bottom></border>';\n                }\n                else {\n                    /* tslint:disable-next-line:max-line-length */\n                    bordersStyle += '<border><left style=\"' + borders.left.lineStyle + '\"><color rgb=\"FF' + borders.left.color.replace('#', '') + '\" /></left><right style=\"' + borders.right.lineStyle + '\"><color rgb=\"FF' + borders.right.color.replace('#', '') + '\" /></right><top style=\"' + borders.top.lineStyle + '\"><color rgb=\"FF' + borders.top.color.replace('#', '') + '\" /></top><bottom style=\"' + borders.bottom.lineStyle + '\"><color rgb=\"FF' + borders.bottom.color.replace('#', '') + '\" /></bottom></border>';\n                }\n            }\n        }\n        return bordersStyle + '</borders>';\n    };\n    Workbook.prototype.saveCellStyles = function () {\n        var _this = this;\n        var cellStyleString = '<cellStyles  count=\"' + (this.cellStyles.size) + '\">';\n        this.cellStyles.forEach(function (value, key) {\n            cellStyleString += '<cellStyle name=\"' + key + '\" xfId=\"' + _this.cellStyles.get(key).xfId + '\"';\n            if (key === 'Normal') {\n                cellStyleString += ' builtinId=\"0\"';\n            }\n            cellStyleString += ' />';\n        });\n        return cellStyleString += '</cellStyles>';\n    };\n    Workbook.prototype.saveCellStyleXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellStyleXfs count=\"' + (this.mCellStyleXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" />';\n        if (this.mCellStyleXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellStyleXfs; _i < _a.length; _i++) {\n                var cellStyleXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellStyleXf.numFmtId + '\" fontId=\"' + cellStyleXf.fontId + '\" fillId=\"' + cellStyleXf.fillId + '\" borderId=\"' + cellStyleXf.borderId + '\" ';\n                if (cellStyleXf.alignment !== undefined) {\n                    cellXfsStyle += '>' + this.saveAlignment(cellStyleXf) + '</xf>';\n                }\n                else {\n                    cellXfsStyle += ' />';\n                }\n            }\n        }\n        return cellXfsStyle + '</cellStyleXfs>';\n    };\n    Workbook.prototype.saveCellXfs = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var cellXfsStyle = '<cellXfs count=\"' + (this.mCellXfs.length + 1) + '\"><xf numFmtId=\"0\" fontId=\"0\" fillId=\"0\" borderId=\"0\" xfId=\"0\" />';\n        if (this.mCellXfs.length >= 1) {\n            for (var _i = 0, _a = this.mCellXfs; _i < _a.length; _i++) {\n                var cellXf = _a[_i];\n                /* tslint:disable-next-line:max-line-length */\n                cellXfsStyle += '<xf numFmtId=\"' + cellXf.numFmtId + '\" fontId=\"' + cellXf.fontId + '\" fillId=\"' + cellXf.fillId + '\" borderId=\"' + cellXf.borderId + '\" xfId=\"' + cellXf.xfId + '\" ';\n                if (cellXf.applyAlignment === 1) {\n                    cellXfsStyle += 'applyAlignment=\"1\"';\n                }\n                cellXfsStyle += '>' + this.saveAlignment(cellXf) + '</xf>';\n            }\n        }\n        return cellXfsStyle + '</cellXfs>';\n    };\n    Workbook.prototype.saveAlignment = function (cellXf) {\n        var alignString = '<alignment ';\n        if (cellXf.alignment.horizontal !== undefined) {\n            alignString += 'horizontal=\"' + cellXf.alignment.horizontal + '\" ';\n        }\n        if (cellXf.alignment.indent !== undefined && cellXf.alignment.indent !== 0) {\n            alignString += 'indent=\"' + cellXf.alignment.indent + '\" ';\n        }\n        else if (cellXf.alignment.rotation !== undefined && cellXf.alignment.rotation !== 0) {\n            alignString += 'textRotation=\"' + cellXf.alignment.rotation + '\" ';\n        }\n        if (cellXf.alignment.vertical !== undefined) {\n            alignString += 'vertical=\"' + cellXf.alignment.vertical + '\" ';\n        }\n        alignString += 'wrapText=\"' + cellXf.alignment.wrapText + '\" />';\n        return alignString;\n    };\n    Workbook.prototype.saveApp = function (builtInProperties) {\n        /* tslint:disable-next-line:max-line-length */\n        var appString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Properties xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/extended-properties\"><Application>Essential XlsIO</Application>';\n        if (builtInProperties !== undefined) {\n            if (builtInProperties.manager !== undefined) {\n                appString += '<Manager>' + builtInProperties.manager + '</Manager>';\n            }\n            if (builtInProperties.company !== undefined) {\n                appString += '<Company>' + builtInProperties.company + '</Company>';\n            }\n        }\n        this.addToArchive((appString + '</Properties>'), 'docProps/app.xml');\n    };\n    Workbook.prototype.saveCore = function (builtInProperties) {\n        var createdDate = new Date();\n        /* tslint:disable-next-line:max-line-length */\n        var coreString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><cp:coreProperties xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:dcmitype=\"http://purl.org/dc/dcmitype/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cp=\"http://schemas.openxmlformats.org/package/2006/metadata/core-properties\">';\n        if (this.builtInProperties !== undefined) {\n            if (builtInProperties.author !== undefined) {\n                coreString += '<dc:creator>' + builtInProperties.author + '</dc:creator>';\n            }\n            if (builtInProperties.subject !== undefined) {\n                coreString += '<dc:subject>' + builtInProperties.subject + '</dc:subject>';\n            }\n            if (builtInProperties.category !== undefined) {\n                coreString += '<cp:category>' + builtInProperties.category + '</cp:category>';\n            }\n            if (builtInProperties.comments !== undefined) {\n                coreString += '<dc:description>' + builtInProperties.comments + '</dc:description>';\n            }\n            if (builtInProperties.title !== undefined) {\n                coreString += '<dc:title>' + builtInProperties.title + '</dc:title>';\n            }\n            if (builtInProperties.tags !== undefined) {\n                coreString += '<cp:keywords>' + builtInProperties.tags + '</cp:keywords>';\n            }\n            if (builtInProperties.status !== undefined) {\n                coreString += '<cp:contentStatus>' + builtInProperties.status + '</cp:contentStatus>';\n            }\n            if (builtInProperties.createdDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.createdDate.toISOString() + '</dcterms:created>';\n            }\n            else {\n                coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            }\n            if (builtInProperties.modifiedDate !== undefined) {\n                /* tslint:disable-next-line:max-line-length */\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + builtInProperties.modifiedDate.toISOString() + '</dcterms:modified>';\n            }\n            else {\n                coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n            }\n        }\n        else {\n            coreString += '<dcterms:created xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:created>';\n            coreString += '<dcterms:modified xsi:type=\"dcterms:W3CDTF\">' + createdDate.toISOString() + '</dcterms:modified>';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        coreString += '</cp:coreProperties>';\n        this.addToArchive(coreString, 'docProps/core.xml');\n    };\n    Workbook.prototype.saveTopLevelRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var topRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\"><Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument\" Target=\"xl/workbook.xml\" /><Relationship Id=\"rId2\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties\" Target=\"docProps/app.xml\" /><Relationship Id=\"rId3\" Type=\"http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties\" Target=\"docProps/core.xml\" /></Relationships>';\n        this.addToArchive(topRelation, '_rels/.rels');\n    };\n    Workbook.prototype.saveWorkbookRelation = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var wbRelation = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">';\n        var length = this.worksheets.length;\n        var count = 0;\n        for (var i = 0; i < length; i++, count++) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (i + 1).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\" Target=\"worksheets/sheet' + (i + 1).toString() + '.xml\" />';\n        }\n        /* tslint:disable-next-line:max-line-length */\n        wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles\" Target=\"styles.xml\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            wbRelation += '<Relationship Id=\"rId' + (++count).toString() + '\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings\" Target=\"sharedStrings.xml\" />';\n        }\n        this.addToArchive((wbRelation + '</Relationships>'), 'xl/_rels/workbook.xml.rels');\n    };\n    Workbook.prototype.saveContentType = function () {\n        /* tslint:disable-next-line:max-line-length */\n        var contentTypeString = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?><Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\"><Default Extension=\"xml\" ContentType=\"application/xml\" /><Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" /><Override PartName=\"/xl/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\" /><Override PartName=\"/xl/workbook.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\" /><Override PartName=\"/docProps/app.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.extended-properties+xml\" /><Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\" />';\n        var sheetsOverride = '';\n        var length = this.worksheets.length;\n        for (var i = 0; i < length; i++) {\n            /* tslint:disable-next-line:max-line-length */\n            sheetsOverride += '<Override PartName=\"/xl/worksheets/sheet' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\" />';\n            if (this.worksheets[i].images != undefined && this.worksheets[i].images.length > 0) {\n                /* tslint:disable-next-line:max-line-length */\n                sheetsOverride += '<Override PartName=\"/xl/drawings/drawing' + (i + 1).toString() + '.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.drawing+xml\" />';\n            }\n        }\n        if (this.imageCount > 0)\n            sheetsOverride += '<Default Extension=\"png\" ContentType=\"image/png\" />';\n        if (this.sharedStringCount > 0) {\n            /* tslint:disable-next-line:max-line-length */\n            contentTypeString += '<Override PartName=\"/xl/sharedStrings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml\" />';\n        }\n        this.addToArchive((contentTypeString + sheetsOverride + '</Types>'), '[Content_Types].xml');\n    };\n    Workbook.prototype.addToArchive = function (xmlString, itemName) {\n        if (typeof (xmlString) === 'string') {\n            var blob = new Blob([xmlString], { type: 'text/plain' });\n            var archiveItem = new ZipArchiveItem(blob, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n        else {\n            var archiveItem = new ZipArchiveItem(xmlString, itemName);\n            this.mArchive.addItem(archiveItem);\n        }\n    };\n    Workbook.prototype.processMergeCells = function (cell, rowIndex, mergeCells) {\n        if (cell.rowSpan !== 0 || cell.colSpan !== 0) {\n            var mCell = new MergeCell();\n            mCell.x = cell.index;\n            mCell.width = cell.colSpan;\n            mCell.y = rowIndex;\n            mCell.height = cell.rowSpan;\n            var startCell = this.getCellName(mCell.y, mCell.x);\n            var endCell = this.getCellName(rowIndex + mCell.height, cell.index + mCell.width);\n            mCell.ref = startCell + ':' + endCell;\n            var mergedCell = mergeCells.add(mCell);\n            var start = { x: mCell.x, y: mCell.y };\n            var end = {\n                x: (cell.index + mCell.width), y: (rowIndex + mCell.height)\n            };\n            this.updatedMergedCellStyles(start, end, cell);\n        }\n        return mergeCells;\n    };\n    Workbook.prototype.updatedMergedCellStyles = function (sCell, eCell, cell) {\n        for (var x = sCell.x; x <= eCell.x; x++) {\n            for (var y = sCell.y; y <= eCell.y; y++) {\n                this.mergedCellsStyle.set(this.getCellName(y, x), { x: x, y: y, styleIndex: cell.styleIndex });\n            }\n        }\n    };\n    /**\n     * Returns the tick count corresponding to the given year, month, and day.\n     * @param year number value of year\n     * @param month number value of month\n     * @param day number value of day\n     */\n    Workbook.prototype.dateToTicks = function (year, month, day) {\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysToMonth365 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];\n        var daysToMonth366 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];\n        if (year >= 1 && year <= 9999 && month >= 1 && month <= 12) {\n            var days = this.isLeapYear(year) ? daysToMonth366 : daysToMonth365;\n            var y = year - 1;\n            var n = y * 365 + ((y / 4) | 0) - ((y / 100) | 0) + ((y / 400) | 0) + days[month - 1] + day - 1;\n            return n * ticksPerDay;\n        }\n        throw new Error('Not a valid date');\n    };\n    /**\n     * Return the tick count corresponding to the given hour, minute, second.\n     * @param hour number value of hour\n     * @param minute number value if minute\n     * @param second number value of second\n     */\n    Workbook.prototype.timeToTicks = function (hour, minute, second) {\n        if (hour >= 0 && hour < 24 && minute >= 0 && minute < 60 && second >= 0 && second < 60) {\n            var totalSeconds = hour * 3600 + minute * 60 + second;\n            return totalSeconds * 10000 * 1000;\n        }\n        throw new Error('Not valid time');\n    };\n    /**\n     * Checks if given year is a leap year.\n     * @param year Year value.\n     */\n    Workbook.prototype.isLeapYear = function (year) {\n        return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    };\n    /**\n     * Converts `DateTime` to the equivalent OLE Automation date.\n     */\n    Workbook.prototype.toOADate = function (date) {\n        var ticks = 0;\n        /* tslint:disable-next-line:max-line-length */\n        ticks = this.dateToTicks(date.getFullYear(), (date.getMonth() + 1), date.getDate()) + this.timeToTicks(date.getHours(), date.getMinutes(), date.getSeconds());\n        if (ticks === 0) {\n            return 0.0;\n        }\n        var ticksPerDay = 10000 * 1000 * 60 * 60 * 24;\n        var daysTo1899 = (((365 * 4 + 1) * 25 - 1) * 4 + 1) * 4 + ((365 * 4 + 1) * 25 - 1) * 3 - 367;\n        var doubleDateOffset = daysTo1899 * ticksPerDay;\n        var oaDateMinAsTicks = (((365 * 4 + 1) * 25 - 1) - 365) * ticksPerDay;\n        if (ticks < oaDateMinAsTicks) {\n            throw new Error('Arg_OleAutDateInvalid');\n        }\n        var millisPerDay = 1000 * 60 * 60 * 24;\n        return ((ticks - doubleDateOffset) / 10000) / millisPerDay;\n    };\n    return Workbook;\n}());\nexport { Workbook };\n/**\n * BuiltInProperties Class\n * @private\n */\nvar BuiltInProperties = /** @class */ (function () {\n    function BuiltInProperties() {\n    }\n    return BuiltInProperties;\n}());\nexport { BuiltInProperties };\n"],"names":["CellStyle","this","numFmtId","backColor","fontName","fontSize","fontColor","italic","bold","underline","wrapText","hAlign","vAlign","indent","rotation","numberFormat","type","borders","Borders","isGlobalStyle","Font","sz","name","u","b","i","color","CellXfs","Alignment","CellStyleXfs","CellStyles","xfId","NumFmt","id","code","formatCode","Border","mLine","mColor","lineStyle","left","right","top","bottom","all","__extends","extendStatics","d","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Cell","Cells","_super","_this","apply","arguments","add","cell","inserted","count","_i","_a","length","index","push","Column","Row","Rows","row","Worksheets","Worksheet","isSummaryRowBelow","showGridLines","HyperLink","Grouping","FreezePane","MergeCell","MergeCells","mergeCell","mCell","isIntersecting","intersectingCell","x","Math","min","y","Y","width","max","Width","X","height","Height","ref","split","base","compare","Image","ValueFormatter","cultureName","intl","Internationalization","getFormatFunction","format","isServerRendered","getDateFormat","getNumberFormat","toView","value","result","isNullOrUndefined","displayText","CsvHelper","json","csvStr","formatter","isMicrosoftBrowser","navigator","msSaveBlob","undefined","styles","globalStyles","Map","set","worksheets","parseWorksheet","rows","parseRows","rows_1","Error","parseRow","cells","parseCell","csv","Date","style","parseCellValue","skeleton","error","has","get","val","start","replace","indexOf","save","fileName","buffer","Blob","dataUrl_1","window","URL","createObjectURL","dwlLink","document","createElementNS","download","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","saveAsBlob","BlobHelper","parts","append","part","blob","getBlob","Workbook","saveType","culture","currencyString","sharedStringCount","unitsProportions","hyperlinkStyle","currency","mSaveType","mArchive","ZipArchive","sharedString","mFonts","mBorders","mStyles","printTitles","cellStyles","mNumFmt","mFills","mCellXfs","mCellStyleXfs","drawingCount","imageCount","cellStyle","parserCellStyle","cellStylesIn","tFormat","parserWorksheets","builtInProperties","BuiltInProperties","parserBuiltInProperties","csvHelper","jsonBuiltInProperties","author","comments","category","company","manager","subject","title","createdDate","modifiedDate","tags","status","jsonSheet","sheet","mergeCells","mergedCellsStyle","mHyperLinks","toString","columns","parserColumns","parserRows","freeze","parserFreezePanes","printTitle","parserPrintTitle","pageSetup","images","parserImages","hyperLinks","mergeOptions","fromJson","toJson","applyProperties","sourceJson","destJson","keys","getCellName","column","getColumnName","col","strColumnName","iCurrentDigit","String","fromCharCode","titleRowName","printTitleName","fromRow","toRow","titleColName","fromColumn","toColumn","freezePanes","leftCell","columnsLength","rowsLength","rowId","r","parserRow","insertMergedCellsStyle","forEach","key","filter","item","rowToInsert","createCell","insertIndex","splice","styleIndex","cellToInsert","refName","rowIndex","grouping","parseGrouping","parseCells","outlineLevel","isCollapsed","isHidden","cellsLength","spanMin","spanMax","cellId","jsonCell","rowSpan","colSpan","hyperlink","hyperLink","target","getCellValueType","rId","formula","parseCellType","processMergeCells","spans","GetColors","colors","processColor","colorVal","toUpperCase","rgbColors","processCellValue","cellValue","processedVal","startindex","substring","endIndex","subString","text","subSplit","subSplit_1","element","trim","applyGlobalStyle","a","cellType","defStyleIndex","parserBorder","leftBorder","rightBorder","topBorder","bottomBorder","toLowerCase","processCellStyle","switchNumberFormat","numFmt","cellStyleXfs","_b","_c","cellXfs","returnFormat","getNumberPattern","getDatePattern","border","processNumFormatId","compareResult","compareStyle","size","isNewFont","toCompareStyle","font","isNewBorder","bStyle","isAllBorder","toCompareBorder","allBorderStyle","baseStyle","contains","array","toOADate","value_1","sstvalue","imagesLength","image","parserImage","lastRow","lastColumn","horizontalFlip","verticalFlip","blobSaveType","Promise","resolve","reject","obj","blobData","saveInternal","then","proxyUrl","xlsxMatch","match","csvMatch","destroy","saveWorkbook","saveWorksheets","saveSharedString","saveStyles","saveApp","saveCore","saveContentType","saveTopLevelRelation","saveWorkbookRelation","workbookTemp","sheets","printTitle_1","addToArchive","saveWorksheet","sheetBlob","sheetString","saveSheetView","colString","pixelsToColumnWidth","rowString","pixelsToRowHeight","_d","_e","_f","_g","_h","_j","hLink","saveDrawings","saveSheetRelations","drawings","sheetDrawingString","imgId","pic","updatelastRowOffset","updatelastColumnOffSet","lastRowOffset","lastColOffset","imageData","convertBase64toImage","saveDrawingRelations","picture","iCurHeight","iCurRow","iCurOffset","iRowHeight","iSpaceInCell","convertToPixels","rowHiddenHeight","round","iCurWidth","iCurCol","iColWidth","ColumnWidthToPixels","colHiddenWidth","img","byteStr","atob","ArrayBuffer","data","Uint8Array","charCodeAt","drawingRelation","pixels","dDigitWidth","trunc","fileWidth","n","relStr","paneString","sstStart","si","processString","updateCellXfsStyleXfs","styleTemp","saveNumberFormats","saveFonts","saveFills","saveBorders","saveCellStyleXfs","saveCellXfs","saveCellStyles","compareFontResult","fontId","fillId","borderId","applyAlignment","alignment","horizontal","vertical","numFmtStyle_1","fontStyle","fillsStyle","bordersStyle","cellStyleString","cellXfsStyle","cellStyleXf","saveAlignment","cellXf","alignString","appString","coreString","toISOString","wbRelation","contentTypeString","sheetsOverride","xmlString","itemName","archiveItem","ZipArchiveItem","addItem","startCell","endCell","end","updatedMergedCellStyles","sCell","eCell","dateToTicks","year","month","day","isLeapYear","timeToTicks","hour","minute","second","date","ticks","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","daysTo1899"],"mappings":"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"}